Found 98 indicator modules to test.

Testing indicator 1/98: bamboo_ta.candles.dynamic_exhaustion_bars

================================================================================
Testing dynamic_exhaustion_bars...
================================================================================

=== Dynamic Exhaustion Bars Test Results ===

Indicator Description:
Name:
    Dynamic Leledc Exhaustion Bars

Description:
    The lookback length and exhaustion bars adjust dynamically to the market conditions.

    This indicator dynamically adjusts the lookback length and the exhaustion 
    bars based on the market's behavior, helping to identify potential reversals
    and trend strength.

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain the 'close' column.
    - window (int): Lookback window for z-score calculation. Default is 500.

Call with:
    dynamic_exhaustion = bta.dynamic_exhaustion_bars(df)
    df['dynamic_leledc_major'] = dynamic_exhaustion['leledc_major']
    df['dynamic_leledc_minor'] = dynamic_exhaustion['leledc_minor']

Returns:
    pd.DataFrame: DataFrame with 'leledc_major' and 'leledc_minor' columns.

Last 32 rows of data with dynamic_exhaustion_bars values:
           date       open       high        low      close         volume  leledc_major  leledc_minor
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060             0             0
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520             0             0
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810             0             0
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830             0             0
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280             0             0
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662             0             0
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100             0             0
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900             0             0
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880             0             0
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950             0             0
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330             0             0
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910             0             0
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450             0             0
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230             0             0
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260             0             0
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775             0             0
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740             0             0
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466             0             0
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550             0             0
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000             0             0
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700             0             0
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430             0             0
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360             0             0
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030             0             0
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880             0             0
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100             0             0
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270             0             0
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290             0             0
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900             0             0
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780             0             0
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500             0             0
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890             0             0

Testing indicator 2/98: bamboo_ta.candles.exhaustion_bars

================================================================================
Testing exhaustion_bars...
================================================================================

=== Exhaustion Bars Test Results ===

Indicator Description:
Name:
    Leledc Exhaustion Bars

Description:
    Infamous S/R Reversal Indicator

    Leledc exhaustion bars are a specific type of price action pattern used in
    technical analysis to identify potential reversals in the market trend.
    These bars are characterized by a sharp move in price with an increase in
    volume, often indicating that the current trend is losing momentum and may
    reverse direction soon. Traders use them to pinpoint the end of a trend
    and the beginning of a new one, thereby making more informed trading decisions.

More info:
    https://www.abundancetradinggroup.com/leledc-exhaustion-bar-mt4-indicator/

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'open',
        'high', 'low', and 'close' columns.
    - maj_qual (int): Major quality parameter. Default is 6.
    - maj_len (int): Major length parameter. Default is 30.
    - min_qual (int): Minor quality parameter. Default is 5.
    - min_len (int): Minor length parameter. Default is 5.
    - core_length (int): Core length parameter. Default is 4.

Call with:
    exhaustion = bta.exhaustion_bars(df)
    df['leledc_major'] = exhaustion['leledc_major']
    df['leledc_minor'] = exhaustion['leledc_minor']

Returns:
    pd.DataFrame: DataFrame with 'leledc_major' and 'leledc_minor' columns.

Last 32 rows of data with exhaustion_bars values:
           date       open       high        low      close         volume  leledc_major  leledc_minor
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060           1.0           0.0
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520           1.0           0.0
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810           1.0           0.0
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830           1.0           1.0
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280           1.0           0.0
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662           1.0          -1.0
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100           1.0           0.0
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900           1.0           0.0
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880           1.0           0.0
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950           1.0           0.0
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330           1.0           0.0
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910           1.0           0.0
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450           1.0           0.0
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230           1.0           0.0
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260           1.0          -1.0
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775           1.0           0.0
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740           1.0           0.0
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466           1.0           0.0
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550           1.0           0.0
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000           1.0           0.0
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700           1.0           1.0
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430           1.0           0.0
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360           1.0           0.0
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030           1.0           0.0
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880           1.0           0.0
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100           1.0           0.0
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270           1.0          -1.0
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290           1.0           0.0
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900           1.0           0.0
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780           1.0           0.0
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500           1.0           0.0
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890           1.0           0.0

Testing indicator 3/98: bamboo_ta.candles.hansen_heiken_ashi

================================================================================
Testing hansen_heiken_ashi...
================================================================================

=== Hansen Heiken Ashi Test Results ===

Indicator Description:
Name:
    Hansen Heiken Ashi (HHA)

Description:
    The Hansen Heiken Ashi is a modified version of the Heiken Ashi candlestick calculation
    with additional smoothing using a Simple Moving Average (SMA). It aims to reduce noise
    in the data for better trend visualization.

More info:
    https://www.investopedia.com/terms/h/heikenashi.asp

Parameters:
    - df (pd.DataFrame): Input DataFrame containing OHLC (open, high, low, close) data.
    - period (int): Period for the Simple Moving Average (SMA) to smooth data. Default is 6.

Call with:
    hha_result = bta.hansen_heiken_ashi(df, period=6)
    df['hha_emac'] = hha_result['emac']
    df['hha_emao'] = hha_result['emao']

Returns:
    pd.DataFrame: DataFrame containing the smoothed 'emac' and 'emao' columns.

Last 32 rows of data with hansen_heiken_ashi values:
           date       open       high        low      close         volume           emac           emao
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   95298.930000   95613.119167
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   95496.471667   95324.751667
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   96113.602917   95182.714167
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   96311.326667   95406.306667
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   96532.732917   96077.191667
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   96659.065417   96399.027500
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   96956.700000   96643.187500
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   97445.573333   96845.600833
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   98087.218750   97080.474167
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   98594.637917   97578.779167
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   98526.770417   98238.428333
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   98741.074167   98796.409167
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   99091.647083   98749.115000
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   99244.680000   98931.202500
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   99459.403750   99301.437500
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  100235.198750   99456.080000
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  101704.061250   99614.635000
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  102979.171250  100239.461667
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  103390.912917  101627.225833
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  103125.795417  102833.425000
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  102277.011667  103267.463333
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  101388.065833  102953.907500
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360   99826.731667  102322.495833
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   97879.222917  101423.615833
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   96785.028333   99919.917500
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   96748.710417   98076.197500
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   96942.510833   97010.139167
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   96529.960417   97045.748333
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   96333.792917   97041.907500
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   96261.336667   96624.674167
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   95698.133750   96384.737500
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   94838.026667   96298.941667

Testing indicator 4/98: bamboo_ta.candles.heiken_ashi

================================================================================
Testing heiken_ashi...
================================================================================

=== Heiken Ashi Test Results ===

Indicator Description:
Name:
    Heiken Ashi

Description:
    Heiken Ashi (HA) with Optional Pre and Post Smoothing

    Heiken Ashi is a type of price chart that shares some characteristics with
    candlestick charts but differs due to the values used to plot them. This
    modified version allows for optional smoothing of the original data before
    the Heiken Ashi calculation and/or smoothing of the Heiken Ashi values
    themselves, aiming to provide a more refined and smoother representation
    of price action, making it easier to identify the trend.

More info:
    https://www.investopedia.com/terms/h/heikenashi.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain columns:
        'open', 'high', 'low', and 'close'.
    - pre_smoothing_period (int, optional): Period for EMA pre-smoothing of the
        original data. If provided, original price bars are smoothed before Heiken
        Ashi calculations.
    - post_smoothing_period (int, optional): Period for EMA post-smoothing of
        Heiken Ashi values. If provided, Heiken Ashi values are smoothed post calculations.

Call with:
    ha_df = bta.heiken_ashi(df)
    df['ha_open'] = ha_df['ha_open']
    df['ha_high'] = ha_df['ha_high']
    df['ha_low'] = ha_df['ha_low']
    df['ha_close'] = ha_df['ha_close']

Returns:
    pd.DataFrame: DataFrame with 'ha_open', 'ha_high', 'ha_low', and 'ha_close' columns.

Last 32 rows of data with heiken_ashi values:
           date       open       high        low      close         volume        ha_open        ha_high         ha_low     ha_close
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   95904.284121   97463.950000   95904.284121   96855.9875
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   96380.135810   97836.000000   95693.880000   96780.7625
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   96580.449155   98130.000000   94395.000000   96387.6975
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   96484.073328   96484.073328   93578.170000   95393.4975
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   95938.785414   99000.000000   94587.830000   97006.2100
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   96472.497707  104088.000000   90500.000000   97530.2375
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   97001.367603  101898.990000   95981.720000   98641.7950
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   97821.581302  100439.180000   97821.581302   99714.0025
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   98767.791901  101351.000000   98657.700000  100237.5700
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   99502.680950  101215.930000   94150.050000   98438.0125
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   98970.346725   98970.346725   94256.540000   96599.0050
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   97784.675863  101888.000000   95658.240000   98816.0600
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   98300.367931  102540.000000   98300.367931  100745.2325
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   99522.800216  101895.260000   99205.000000  100632.2000
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  100077.500108  102650.000000  100077.500108  101525.9125
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  100801.706304  105250.000000  100801.706304  103092.7825
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  101947.244402  107793.070000  101947.244402  105412.1800
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  103679.712201  108353.000000  103679.712201  106466.7200
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  105073.216100  106524.980000  100000.000000  103215.6825
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  104144.449300  104144.449300   95700.000000   99041.4950
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  101592.972150  101592.972150   92232.540000   96433.2100
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430   99013.091075   99540.610000   96398.390000   97759.1075
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360   98386.099288   98386.099288   94250.350000   96044.1750
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   97215.137144   97215.137144   92520.000000   94781.6675
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   95998.402322   99487.990000   93569.020000   96650.5150
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   96324.458661   99569.150000   96324.458661   98823.5875
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   97574.023080   99963.700000   95199.140000   97596.0125
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   97585.017790   97585.017790   93500.010000   95283.8050
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   96434.411395   96434.411395   94135.660000   94867.1700
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   95650.790698   95650.790698   93009.520000   94346.9300
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   94998.860349   95024.500000   91530.450000   93271.2975
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   94135.078924   96250.000000   92033.730000   93662.9450

Testing indicator 5/98: bamboo_ta.candles.linear_regression_candles

================================================================================
Testing linear_regression_candles...
================================================================================

=== Linear Regression Candles Test Results ===

Indicator Description:
Name:
    Linear Regression Candles

Description:
    Linear Regression Candles with Optional Signal Line
    The Linear Regression Candles transform the traditional OHLC bars using a
    linear regression algorithm, providing a smoothed representation of price
    action. The function also provides an optional signal line, which can be
    either an SMA or an EMA of the Linear Regression Candle close. This signal
    line can help to identify trends and potential trading signals.

More info:
    https://www.investopedia.com/terms/l/linearregression.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain columns:
        'open', 'high', 'low', and 'close'.
    - linreg_length (int, optional): Period for linear regression calculation.
        Default is 11.
    - sma_signal (bool, optional): If True, uses SMA for the signal line. If
        False, uses EMA. Default is True.
    - signal_length (int, optional): Period for the moving average signal line.
        Default is 11.

Call with:
    lr_df = bta.linear_regression_candles(df)
    df['lrc_open'] = lr_df['bopen']
    df['lrc_high'] = lr_df['bhigh']
    df['lrc_low'] = lr_df['blow']
    df['lrc_close'] = lr_df['bclose']
    df['lrc_signal'] = lr_df['signal']

Returns:
    pd.DataFrame: DataFrame with 'bopen', 'bhigh', 'blow', 'bclose' as the
    Linear Regression Candles, and 'signal' as the signal line.

Last 32 rows of data with linear_regression_candles values:
           date       open       high        low      close         volume          bopen          bhigh           blow         bclose         signal
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   95997.273636   97490.373636   94491.314091   95578.085909   96509.855496
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   95578.088636   97017.543182   94447.852727   95579.182727   96684.791570
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   95579.181364   97257.353182   94262.298636   95753.538636   96766.104339
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   95753.533636   97064.739545   94361.091364   96147.872273   96694.498512
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   96147.867273   97755.180909   94944.753182   97329.811364   96630.686694
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   97329.806364   99997.688182   94088.798636   97989.196364   96520.693512
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   97989.193182  101348.565000   94645.048182   98692.252273   96591.437355
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   98692.249545  101388.551818   95629.391818   98928.390909   96792.919339
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   98928.388636  101876.551818   96370.424545   99922.173636   97092.479174
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   99922.175000  102016.137273   95882.926818   99418.009091   97394.162231
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   99418.015455  101380.746364   95583.399091   98952.358182   97662.806488
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   98952.364545  101702.256818   95912.436364   99776.841818   98044.511570
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   99776.848182  102097.774091   97351.248636  100171.633636   98462.007107
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  100171.638182  102127.783182   98355.526364  100645.624091   98906.742149
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  100645.623182  101895.065000   99439.510909  100866.110000   99335.672851
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  100866.108636  102691.139545  100587.200455  102299.693182   99787.480289
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  102299.691364  104937.372727  101356.271364  103675.060909  100304.377066
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  103675.055455  106795.351364  103171.401818  105168.309091  100893.109504
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  105168.303636  107512.903182  103389.210455  104500.811364  101399.693182
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  104500.805909  106934.427273  102152.419091  103176.192273  101695.513058
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  103176.188636  104812.353182   99127.213182  101429.769091  101878.400331
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  101429.767727  102706.300909   97534.026364   99371.664091  101916.519050
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360   99371.666818  100534.506818   95414.870000   97435.785000  101703.695702
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   97435.791364   98393.794545   93473.397273   95469.100909  101276.192727
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   95469.107273   97346.973636   92155.025455   95196.845455  100780.849215
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   95196.850000   96572.623182   92640.954545   95293.035909  100274.206116
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   95293.043182   96536.577273   92602.254091   94875.606364   99599.289132
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   94875.612727   96433.474091   92678.441364   94667.407727   98780.411570
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   94667.411364   96321.920000   93765.378636   95325.879091   97885.645207
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   95325.881364   96326.229545   94034.901818   94901.724091   97013.000909
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   94901.721818   96061.311818   93369.742727   93971.849091   96176.242438
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   93971.845909   95709.379091   92423.795909   93566.145909   95461.367603

Testing indicator 6/98: bamboo_ta.candles.smoothed_heiken_ashi

================================================================================
Testing smoothed_heiken_ashi...
================================================================================

=== Smoothed Heiken Ashi Test Results ===

Indicator Description:
Name:
    Smoothed Heiken Ashi Candles

Description:
    This function computes the Smoothed Heiken Ashi Candles using two levels of exponential 
    moving average (EMA) smoothing. The first smoothing is applied to the original OHLC 
    prices, and then the Heiken Ashi values are computed.
    A second smoothing is applied to the Heiken Ashi values to produce the final smoothed 
    candle values.

More info:
    https://www.investopedia.com/terms/h/heikenashi.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which must contain the columns 'open', 'high', 'low', and 'close'.
    - len_ (int): The period for the first level EMA smoothing of the original prices. Default is 10.
    - len2 (int): The period for the second level EMA smoothing of the Heiken Ashi values. Default is 10.
    - fillna (bool): If True, fill NaN values with 0. Default is False.

Call with:
    sha_result = bta.smoothed_heiken_ashi(df, len_=10, len2=10)
    df['sha_open'] = sha_result['sha_open']
    df['sha_high'] = sha_result['sha_high']
    df['sha_low'] = sha_result['sha_low']
    df['sha_close'] = sha_result['sha_close']
    df['sha_color'] = sha_result['sha_color']

Returns:
    pd.DataFrame: DataFrame with columns 'sha_open', 'sha_high', 'sha_low', 'sha_close', and 'sha_color'.

Last 32 rows of data with smoothed_heiken_ashi values:
           date       open       high        low      close         volume       sha_open       sha_high       sha_low      sha_close sha_color
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   91271.867398   94384.589443  90509.326190   92494.188586     green
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   91883.027992   94842.373871  91119.496105   93011.849360     green
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   92447.438676   95257.506460  91636.238079   93469.980891     green
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   92958.709784   95570.050210  92046.352356   93840.251308     green
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   93399.480546   95892.660483  92404.907455   94192.778073     green
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   93796.129310   96379.543046  92581.959796   94539.096302     green
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   94167.612806   96887.933752  92812.871204   94906.555569     green
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   94537.084187   97345.657985  93166.824421   95311.464563     green
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   94924.274375   97784.476422  93585.284858   95745.365806     green
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   95334.820090   98191.667395  93884.081189   96124.841734     green
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   95729.830912   98466.839290  94096.414561   96394.545894     green
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   96062.188403   98764.141491  94290.185675   96655.141707     green
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   96358.665055   99087.983741  94585.898713   96964.799756     green
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   96661.732406   99397.573223  94936.552938   97293.327880     green
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   96977.530143   99712.337315  95358.820876   97653.171819     green
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775   97315.350981  100106.110391  95835.820706   98073.880924     green
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740   97694.615952  100623.824917  96402.975280   98598.101038     green
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466   98146.358495  101225.904065  97077.467671   99209.144882     green
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550   98677.751688  101804.124848  97625.600010   99750.638285     green
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000   99214.194987  102224.123393  97928.875377  100089.682852     green
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700   99651.938919  102373.341481  97943.585817  100195.771434     green
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430   99923.855177  102379.587259  97902.352448  100186.238537     green
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  100055.046857  102220.743284  97754.022591  100042.929290       red
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  100048.988074  101926.580845  97481.701858   99773.068992       red
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   99911.028533  101649.047614  97170.059652   99489.193784       red
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   99700.111158  101394.503960  96976.711080   99277.158107       red
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   99488.634632  101176.807664  96788.516711   99079.641807       red
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   99284.138220  100911.003444  96553.824391   98821.937943       red
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   99053.038081  100561.927447  96316.776990   98518.689309       red
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   98785.863695  100155.622773  96048.761556   98177.778758       red
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   98481.821226   99714.009801  95719.980595   97787.368183       red
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   98134.594705   99303.871867  95378.028031   97389.674386       red

Testing indicator 7/98: bamboo_ta.momentum.awesome_oscillator

================================================================================
Testing awesome_oscillator...
================================================================================

=== Awesome Oscillator Test Results ===

Indicator Description:
Name:
    Awesome Oscillator

Description:
    The Awesome Oscillator is a momentum indicator used to measure market momentum.
    It is calculated by subtracting a 34-period simple moving average (SMA) of the
    median price from a 5-period SMA of the median price.

More info:
    https://www.investopedia.com/terms/a/awesomeoscillator.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame containing 'high' and 'low' columns.
    - high_col (str): The name of the 'high' column. Default is 'high'.
    - low_col (str): The name of the 'low' column. Default is 'low'.
    - window1 (int, optional): Short period. Default is 5.
    - window2 (int, optional): Long period. Default is 34.
    - fillna (bool, optional): If True, fill nan values with 0. Default is False.

Call with:
    df['ao'] = bta.awesome_oscillator(df, 'high', 'low', 5, 34)['ao']

Returns:
    pd.DataFrame: DataFrame with the 'ao' column.

Last 32 rows of data with awesome_oscillator values:
           date       open       high        low      close         volume            ao
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  10936.654676
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  10894.932735
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  10524.678912
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   9723.726000
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   8931.039382
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   8238.141765
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   7806.074765
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   7564.047912
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   7640.170971
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   6975.170676
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   6080.369676
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   5366.330765
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   4901.167206
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   4297.299676
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   4420.945471
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775   5276.702676
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740   6103.596412
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466   6781.751118
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550   6911.476500
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000   6147.653412
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700   4418.585912
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430   2668.011118
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360    327.353206
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  -1489.788235
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  -2132.995882
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  -1520.803029
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  -1575.664912
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  -1567.515676
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  -1421.308559
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  -1846.138882
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  -2922.385588
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  -3599.758059

Testing indicator 8/98: bamboo_ta.momentum.calculate_intraday_momentum_index

================================================================================
Testing calculate_intraday_momentum_index...
================================================================================
Error: calculate_intraday_momentum_index did not return a DataFrame

Testing indicator 9/98: bamboo_ta.momentum.chande_momentum_oscillator

================================================================================
Testing chande_momentum_oscillator...
================================================================================

=== Chande Momentum Oscillator Test Results ===

Indicator Description:
Name:
    Chande Momentum Oscillator

Description:
    The Chande Momentum Oscillator (CMO) is a technical momentum indicator developed 
    by Tushar Chande. It measures the amount that an asset's price has changed over 
    a specified period of time.

More info:
    https://www.investopedia.com/terms/c/chandemomentumoscillator.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain the 'close' column.
    - length (int): Length for the CMO calculation. Default is 14.

Call with:
        df['cmo'] = bta.chande_momentum_oscillator(df)

For Signal line:
        df['cmo_signal'] = df['cmo'].rolling(window=10).mean()  # Using SMA for signal

Returns:
    pd.DataFrame: DataFrame with 'cmo' column.

Last 32 rows of data with chande_momentum_oscillator values:
           date       open       high        low      close         volume        cmo
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  24.119620
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  30.310420
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  21.577885
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  15.333681
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  18.039253
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  -6.393222
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   3.585752
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   9.579389
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  13.603195
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  18.930762
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  20.868875
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  23.068499
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  18.389064
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  17.002733
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  22.508073
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  29.667761
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  41.227508
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  41.383624
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550   5.765115
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000   1.771363
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  -7.251008
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  -9.367937
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360 -21.198717
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  -9.810122
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   7.526043
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  -7.139663
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270 -16.040088
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290 -27.054934
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900 -22.390648
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780 -41.491374
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500 -52.640828
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890 -48.464899

Testing indicator 10/98: bamboo_ta.momentum.ehlers_fisher_stochastic_center_of_gravity

================================================================================
Testing ehlers_fisher_stochastic_center_of_gravity...
================================================================================

=== Ehlers Fisher Stochastic Center Of Gravity Test Results ===

Indicator Description:
Name:
    Ehlers Fisher Stochastic Center of Gravity Indicator

Description:
    The Fisher Stochastic Center of Gravity indicator, developed by John Ehlers, 
    is used to identify potential turning points in the market by calculating 
    the center of gravity of price movements.

More info:
    https://ninjatraderecosystem.com/user-app-share-download/john-ehlers-the-fisher-stochastic-center-of-gravity/
    https://fxstill.com/indikators/the-fisher-stochastic-center-of-gravity
    https://viewer.mathworks.com/?viewer=plain_code&url=https%3A%2F%2Fes.mathworks.com%2Fmatlabcentral%2Fmlc-downloads%2Fdownloads%2F5a9e5f01-906c-4152-98c6-87484eed86bf%2F853ab8ad-8751-4bcd-ae00-60a9444e9182%2Ffiles%2Fmatlab%2FChapter4-Ehlers%2FEhlerStochCG.m&embed=web
    https://www.tradingview.com/script/TLjl71aL-Ehlers-Fisher-Stochastic-Center-Of-Gravity-CC/

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain columns: 'high', 'low'.
    - length (int): Period for the indicator. Default is 8.

Call with:
    fscg = bta.ehlers_fisher_stochastic_center_of_gravity(df)
    df['cg'] = fscg['cg']
    df['trigger'] = fscg['trigger']

Returns:
    pd.DataFrame: DataFrame with 'CG' and 'Trigger' columns.

Last 32 rows of data with ehlers_fisher_stochastic_center_of_gravity values:
           date       open       high        low      close         volume        cg   trigger
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060 -1.032978 -1.722525
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520 -0.583256 -1.032978
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810 -0.163461 -0.583256
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  0.332237 -0.163461
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  0.495546  0.332237
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  0.468863  0.495546
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  0.479141  0.468863
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  0.753346  0.479141
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  1.144250  0.753346
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  1.176979  1.144250
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  0.435022  1.176979
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910 -0.228174  0.435022
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450 -0.616294 -0.228174
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230 -0.873552 -0.616294
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260 -0.482042 -0.873552
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  0.187184 -0.482042
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  0.727363  0.187184
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  1.420277  0.727363
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  0.887833  1.420277
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  0.042526  0.887833
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700 -0.542853  0.042526
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430 -1.203733 -0.542853
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360 -2.214646 -1.203733
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030 -2.646652 -2.214646
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880 -1.518747 -2.646652
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100 -0.661247 -1.518747
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  0.013818 -0.661247
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  0.580210  0.013818
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  0.914123  0.580210
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  1.002448  0.914123
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  0.726427  1.002448
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  0.355716  0.726427

Testing indicator 11/98: bamboo_ta.momentum.elliott_wave_oscillator

================================================================================
Testing elliott_wave_oscillator...
================================================================================

=== Elliott Wave Oscillator Test Results ===

Indicator Description:
Name:
    Elliott Wave Oscillator

Description:
    The Elliott Wave Oscillator (EWO) is a tool to help identify the trend and 
    overall market pattern, assisting in finding future trading opportunities.
    It is derived by calculating the difference between a short and long period 
    simple moving average, then normalizing the result with the close price.

More info:
    https://www.investopedia.com/terms/e/elliottwavetheory.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain at least the 
      column specified.
    - column (str): The column on which EWO is to be calculated. Default is 'close'.
    - sma1_period (int): The period for the shorter SMA used in EWO calculation. 
      Default is 5.
    - sma2_period (int): The period for the longer SMA used in EWO calculation. 
      Default is 35.

Call with:
    df['ewo'] = bta.elliott_wave_oscillator(df, 'close', 5, 35)

Returns:
    pd.DataFrame: DataFrame with 'ewo' column.

Last 32 rows of data with elliott_wave_oscillator values:
           date       open       high        low      close         volume        ewo
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  11.623213
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  11.747128
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  11.135765
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  10.488661
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   9.665569
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   9.154638
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   8.544158
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   8.464303
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   8.484106
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   7.684612
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   6.860798
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   6.105114
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   5.518122
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   4.801070
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   4.921342
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775   5.625885
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740   6.002629
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466   6.663970
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550   6.534518
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000   5.608977
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700   4.029815
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430   2.052041
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  -0.362780
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  -1.618900
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  -1.497209
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  -1.306766
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  -1.594328
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  -1.668578
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  -1.492092
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  -2.440979
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  -3.889786
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  -4.379923

Testing indicator 12/98: bamboo_ta.momentum.kaufmans_adaptive_moving_average

================================================================================
Testing kaufmans_adaptive_moving_average...
================================================================================

=== Kaufmans Adaptive Moving Average Test Results ===

Indicator Description:
Name:
    Kaufman's Adaptive Moving Average (KAMA)

Description:
    Moving average designed to account for market noise or volatility. KAMA
    will closely follow prices when the price swings are relatively small and
    the noise is low. KAMA will adjust when the price swings widen and follow
    prices from a greater distance. This trend-following indicator can be
    used to identify the overall trend, time turning points, and filter price
    movements.

More info:
    https://www.investopedia.com/terms/k/kama.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain the 'close' column.
    - close_col (str): Column name for the close prices. Default is 'close'.
    - window (int): Number of periods for the efficiency ratio. Default is 10.
    - pow1 (int): Number of periods for the fastest EMA constant. Default is 2.
    - pow2 (int): Number of periods for the slowest EMA constant. Default is 30.
    - fillna (bool): If True, fill nan values with the close prices. Default is False.

Call with:
    df['kama'] = bta.kaufmans_adaptive_moving_average(df)['kama']

Returns:
    pd.DataFrame: DataFrame with 'kama' column.

Last 32 rows of data with kaufmans_adaptive_moving_average values:
           date       open       high        low      close         volume          kama
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  95018.912550
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  95151.106990
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  95177.177354
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  95193.722030
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  95295.452993
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  95312.964124
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  95345.794810
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  95412.784771
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  95534.930611
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  95590.424834
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  95626.685709
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  95854.211487
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  95981.665179
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  96133.268382
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  96344.840463
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  96824.902474
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  97728.182718
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  98555.395570
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  98571.629068
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  98565.356216
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  98556.463293
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  98537.973018
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  98414.204264
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  98360.245450
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  98363.904745
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  98376.221937
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  98309.141367
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  98101.725190
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  97990.392901
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  97570.190722
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  96874.794307
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  96455.901069

Testing indicator 13/98: bamboo_ta.momentum.ma_streak

================================================================================
Testing ma_streak...
================================================================================

=== Ma Streak Test Results ===

Indicator Description:
Name:
    MA Streak Indicator

Description:
    This indicator tracks how many bars a given moving average is rising or falling.
    It's color-coded green (positive) or red (negative).

More info:
    https://www.tradingview.com/script/Yq1z7cIv-MA-Streak-Can-Show-When-a-Run-Is-Getting-Long-in-the-Tooth/

Call with:
    df['ma_streak'] = bta.ma_streak(df, length=10, src='close', matype=1)['ma_streak']

Parameters:
    - df (pd.DataFrame): Input DataFrame containing the data.
    - length (int): Period for the moving average calculation. Default is 10.
    - src (str): The column name to use for the moving average calculation. Default is 'close'.
    - matype (int): Type of moving average to use. Default is 1 (SMA).

    MA types:
    1 - Simple Moving Average (SMA)
    2 - Exponential Moving Average (EMA)
    3 - Hull Moving Average (HMA)
    4 - Weighted Moving Average (WMA)
    5 - Volume Weighted Moving Average (VWMA)

Returns:
    pd.DataFrame: DataFrame with 'ma_streak' column.

Last 32 rows of data with ma_streak values:
           date       open       high        low      close         volume  ma_streak
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060         35
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520         -1
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810         -2
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830         -3
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280          1
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662          2
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100          3
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900          4
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880          5
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950         -1
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330          1
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910          2
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450          3
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230          4
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260          5
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775          6
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740          7
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466          8
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550         -1
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000          1
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700          2
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430         -1
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360         -2
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030         -3
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880         -4
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100         -5
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270         -6
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290         -7
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900         -8
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780         -9
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500        -10
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890        -11

Testing indicator 14/98: bamboo_ta.momentum.momentum_divergence

================================================================================
Testing momentum_divergence...
================================================================================

=== Momentum Divergence Test Results ===

Indicator Description:
Name:
    Momentum Divergence (momdiv)

Description:
    A self-contained implementation of the Momentum Divergence indicator. It calculates
    momentum and applies Bollinger Bands to identify potential buy and sell signals
    based on momentum divergence. Additionally, it detects if the current high or low
    breaks the highest high or lowest low over a specified lookback period.

More info:
    https://www.tradingview.com/script/Yq1z7cIv-MA-Streak-Can-Show-When-a-Run-Is-Getting-Long-in-the-Tooth/

Call with:
    momdiv_result = bta.momentum_divergence(df, mom_length=5, bb_length=5, bb_dev=1.0, lookback=5)
    df['momentum_divergence_mom'] = momdiv_result['momentum_divergence_mom']
    df['momentum_divergence_upperb'] = momdiv_result['momentum_divergence_upperb']
    df['momentum_divergence_lowerb'] = momdiv_result['momentum_divergence_lowerb']
    df['momentum_divergence_buy'] = momdiv_result['momentum_divergence_buy']
    df['momentum_divergence_sell'] = momdiv_result['momentum_divergence_sell']
    df['momentum_divergence_coh'] = momdiv_result['momentum_divergence_coh']
    df['momentum_divergence_col'] = momdiv_result['momentum_divergence_col']

Parameters:
    - df (pd.DataFrame): Input DataFrame containing OHLC data.
    - mom_length (int, default=10): Lookback period for momentum calculation.
    - bb_length (int, default=20): Lookback period for Bollinger Bands calculation.
    - bb_dev (float, default=2.0): Number of standard deviations for Bollinger Bands.
    - lookback (int, default=30): Lookback period for detecting highest high and lowest low.

Returns:
    - pd.DataFrame: DataFrame with the following columns:
    - 'momentum_divergence_mom': Calculated momentum.
    - 'momentum_divergence_upperb': Upper Bollinger Band for momentum.
    - 'momentum_divergence_lowerb': Lower Bollinger Band for momentum.
    - 'momentum_divergence_buy': Boolean indicating a buy signal (momentum crossed below lower band).
    - 'momentum_divergence_sell': Boolean indicating a sell signal (momentum crossed above upper band).
    - 'momentum_divergence_coh': Boolean indicating the current high is the highest high over the lookback period.
    - 'momentum_divergence_col': Boolean indicating the current low is the lowest low over the lookback period.

Last 32 rows of data with momentum_divergence values:
           date       open       high        low      close         volume  momentum_divergence_mom  momentum_divergence_upperb  momentum_divergence_lowerb  momentum_divergence_buy  momentum_divergence_sell  momentum_divergence_coh  momentum_divergence_col
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060                  2121.43                24947.649931                -1620.057931                        0                         0                        0                        0
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520                 -1131.94                24606.486790                -3307.286790                        0                         0                        0                        0
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810                 -3051.38                24270.503500                -5134.168500                        0                         0                        0                        0
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830                 -1822.71                22792.469435                -5998.326435                        0                         0                        0                        0
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280                   687.28                21248.485349                -6333.172349                        0                         0                        0                        0
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662                  3935.62                18696.890532                -5554.021532                        0                         0                        1                        0
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100                  7775.68                17688.643095                -5269.699095                        0                         0                        0                        0
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900                  3968.88                16616.648491                -5200.626491                        0                         0                        0                        0
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880                  5465.61                15478.485959                -4911.332959                        0                         0                        0                        0
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950                  -183.53                13714.675899                -4729.208899                        0                         0                        0                        0
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330                   185.01                12068.696665                -4456.383665                        0                         0                        0                        0
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910                  3939.82                11310.138800                -4270.756800                        0                         0                        0                        0
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450                  4163.67                10159.648252                -3797.898252                        0                         0                        0                        0
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230                  5574.56                 9899.969837                -3710.483837                        0                         0                        0                        0
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260                  2832.68                 8531.447684                -3116.138684                        0                         0                        0                        0
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775                  7518.36                 9177.698484                -3208.347484                        0                         0                        1                        0
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740                  6317.82                 9547.691393                -3084.382393                        0                         0                        1                        0
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466                  6301.75                 9590.989459                -3098.217459                        0                         0                        1                        0
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550                  -905.58                 9477.121506                -3592.897506                        0                         0                        0                        0
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000                   185.39                 9252.987334                -3865.145334                        0                         0                        0                        0
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700                  1212.44                 9236.772854                -3939.829854                        0                         0                        0                        0
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430                 -3833.01                 9525.144228                -4498.308228                        0                         0                        0                        0
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360                 -4818.02                 9768.646055                -4918.474055                        0                         0                        0                        0
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030                 -6542.78                10363.784162                -5985.619162                        1                         0                        0                        0
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880                 -2756.42                10465.278600                -6431.483600                        0                         0                        0                        0
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100                 -5034.39                10524.994517                -7388.200517                        0                         0                        0                        0
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270                -10267.06                10574.456421                -9241.936421                        1                         0                        0                        0
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290                -11834.71                11107.596044               -11355.435044                        1                         0                        0                        0
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900                 -4904.01                10459.310567               -11744.111567                        0                         0                        0                        0
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780                 -3723.66                10364.085703               -12002.899703                        0                         0                        0                        0
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500                 -5013.39                10246.604026               -12405.258026                        0                         0                        0                        0
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890                 -3715.99                 9665.316341               -12589.551341                        0                         0                        0                        0

Testing indicator 15/98: bamboo_ta.momentum.moving_average_convergence_divergence

================================================================================
Testing moving_average_convergence_divergence...
================================================================================

=== Macd Test Results ===

Indicator Description:
Name:
    Moving Average Convergence Divergence (MACD)

Description:
    MACD is a trend-following momentum indicator that shows the relationship 
    between two moving averages of a security's price.

More info:
    https://www.investopedia.com/terms/m/macd.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain at least the "close" column.
    - column (str): The column on which MACD is to be calculated. Default is "close".
    - short_window (int): The short-term period for EMA. Default is 12.
    - long_window (int): The long-term period for EMA. Default is 26.
    - signal_window (int): The signal line period for EMA. Default is 9.

Call with:
    macd_result = bta.macd(df, 'close', 12, 26, 9)
    df['macd'] = macd_result['macd']
    df['macd_signal'] = macd_result['macd_signal']
    df['macd_histogram'] = macd_result['macd_histogram']

Returns:
    pd.DataFrame: DataFrame with 'macd', 'macd_signal', and 'macd_histogram' columns.

Last 32 rows of data with macd values:
           date       open       high        low      close         volume         macd  macd_signal  macd_histogram
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  5182.624965  5775.950946     -593.325980
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  5011.167475  5622.994251     -611.826777
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  4712.469013  5440.889204     -728.420190
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  4425.466185  5237.804600     -812.338415
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  4368.560194  5063.955719     -695.395524
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  4143.230542  4879.810683     -736.580142
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  4142.453628  4732.339272     -589.885644
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  4101.908711  4606.253160     -504.344449
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  4125.314162  4510.065360     -384.751199
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  3790.863684  4366.225025     -575.361341
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  3431.107284  4179.201477     -748.094193
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  3471.672985  4037.695779     -566.022793
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  3374.490637  3905.054750     -530.564113
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  3373.168049  3798.677410     -425.509361
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  3333.352141  3705.612356     -372.260215
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  3506.995835  3665.889052     -158.893217
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  3730.285842  3678.768410       51.517432
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  3868.707064  3716.756141      151.950923
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  3460.042014  3665.413315     -205.371301
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  2881.685157  3508.667684     -626.982527
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  2423.124940  3291.559135     -868.434195
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  1995.281181  3032.303544    -1037.022363
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  1469.360045  2719.714844    -1250.354799
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  1016.254198  2379.022715    -1362.768517
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   951.382276  2093.494627    -1142.112352
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   950.821741  1864.960050     -914.138309
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   649.336173  1621.835275     -972.499101
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   286.664277  1354.801075    -1068.136798
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900    79.102258  1099.661312    -1020.559054
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  -209.007042   837.927641    -1046.934683
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  -507.828208   568.776471    -1076.604679
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  -673.622817   320.296613     -993.919431

Testing indicator 16/98: bamboo_ta.momentum.moving_average_convergence_divergence_leader

================================================================================
Testing moving_average_convergence_divergence_leader...
================================================================================

=== Macd Leader Test Results ===

Indicator Description:
Name:
    MACD Leader

Description:
    The MACD Leader is a variation of the standard MACD that aims to provide an 
    earlier signal by using a different calculation method.

More info:
    https://www.investopedia.com/terms/m/macd.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain the source column.
    - src (str): The column to use for calculations. Default is 'close'.
    - fast_length (int): Length for the fast EMA. Default is 12.
    - slow_length (int): Length for the slow EMA. Default is 26.
    - signal_length (int): Length for the signal EMA. Default is 9.

Call with:
    df['macd_leader'] = bta.macd_leader(df, 'close')['macd_leader']

Returns:
    pd.DataFrame: DataFrame with 'macd_leader' column.

Last 32 rows of data with macd_leader values:
           date       open       high        low      close         volume  macd_leader
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  -435.386719
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  -661.129286
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810 -1091.110801
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830 -1456.102480
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280 -1376.593284
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662 -1608.745270
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100 -1420.593550
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900 -1327.623575
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880 -1134.645991
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950 -1599.870423
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330 -2059.579695
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910 -1760.673272
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450 -1742.202037
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230 -1557.939816
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260 -1464.305062
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775 -1004.157186
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  -508.602634
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  -219.142783
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  -930.947063
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000 -1862.555543
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700 -2477.570624
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430 -2970.817245
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360 -3584.972316
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030 -4004.140317
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880 -3691.880369
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100 -3304.501704
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270 -3496.719906
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290 -3777.739802
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900 -3754.388078
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780 -3878.620550
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500 -4009.834504
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890 -3892.504319

Testing indicator 17/98: bamboo_ta.momentum.moving_average_convergence_divergence_v

================================================================================
Testing moving_average_convergence_divergence_v...
================================================================================

=== Macd V Test Results ===

Indicator Description:
Name:
    MACD-V (Volatility Normalized Momentum)

Description:
    The MACD-V is a refined version of the traditional MACD indicator, adjusted for volatility
    using the Average True Range (ATR). This normalization allows for more stable and comparable
    momentum readings across different markets and timeframes.

More info:
    https://www.investopedia.com/terms/m/macd.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain at least the "close" column.
    - column (str): The column on which MACD-V is to be calculated. Default is "close".
    - short_window (int): The short-term period for EMA. Default is 12.
    - long_window (int): The long-term period for EMA. Default is 26.
    - atr_window (int): The period for ATR calculation. Default is 26.
    - signal_window (int): The period for the signal line EMA. Default is 9.
    - fillna (bool): If True, fill nan values. Default is False.

Call with:
    macd_v_result = bta.macd_v(df, 'close', 12, 26, 26, 9)
    df['macd_v'] = macd_v_result['macd_v']
    df['macd_v_signal'] = macd_v_result['macd_v_signal']

Returns:
    pd.DataFrame: DataFrame with 'macd_v' and 'macd_v_signal' columns.

Last 32 rows of data with macd_v values:
           date       open       high        low      close         volume      macd_v  macd_v_signal
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  163.729484     182.764568
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  160.305904     178.272835
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  149.629455     172.544159
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  141.244638     166.284255
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  137.273204     160.482045
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  115.648713     151.515378
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  112.799790     143.772261
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  114.179722     137.853753
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  115.947446     133.472492
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  102.654457     127.308885
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   92.603224     120.367752
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   91.305271     114.555256
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   89.267596     109.497724
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   90.233254     105.644830
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   90.753335     102.666531
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775   95.142316     101.161688
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  100.389236     101.007198
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  104.857138     101.777186
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550   91.088264      99.639401
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000   73.408587      94.393238
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700   60.497256      87.614042
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430   50.231772      80.137588
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360   37.271037      71.564278
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   25.758547      62.403131
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   23.659053      54.654316
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   24.126031      48.548659
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   16.344816      42.107890
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290    7.210778      35.128468
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900    2.036583      28.510091
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   -5.465216      21.715029
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  -13.323187      14.707386
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  -17.601042       8.245701

Testing indicator 18/98: bamboo_ta.momentum.percentage_price_oscillator

================================================================================
Testing percentage_price_oscillator...
================================================================================

=== Percentage Price Oscillator Test Results ===

Indicator Description:
Name:
    Percentage Price Oscillator (PPO)

Description:
    The Percentage Price Oscillator (PPO) is a technical indicator that shows the relationship
    between two moving averages of a security's price. It is calculated by subtracting a slow
    exponential moving average (EMA) from a fast EMA and then dividing the result by the slow EMA.

More info:
    https://www.investopedia.com/terms/p/ppo.asp

Call with:
    ppo = bta.percentage_price_oscillator(df)
    df['ppo'] = ppo['ppo']
    df['ppo_signal'] = ppo['ppo_signal']
    df['ppo_hist'] = ppo['ppo_hist']

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain the close column.
    - close_col (str): Name of the column containing close price data. Default is 'close'.
    - window_slow (int): n period long-term. Default is 26.
    - window_fast (int): n period short-term. Default is 12.
    - window_sign (int): n period to signal. Default is 9.
    - fillna (bool): if True, fill nan values. Default is False.

Returns:
    pd.DataFrame: DataFrame with columns ['ppo', 'ppo_signal', 'ppo_hist'].

Last 32 rows of data with percentage_price_oscillator values:
           date       open       high        low      close         volume       ppo  ppo_signal  ppo_hist
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  5.801048    6.689932 -0.888884
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  5.572879    6.466522 -0.893643
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  5.215265    6.216270 -1.001005
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  4.875695    5.948155 -1.072460
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  4.782473    5.715019 -0.932546
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  4.515287    5.475073 -0.959785
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  4.485542    5.277167 -0.791624
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  4.415147    5.104763 -0.689615
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  4.411483    4.966107 -0.554623
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  4.041784    4.781242 -0.739459
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  3.650140    4.555022 -0.904882
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  3.672672    4.378552 -0.705880
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  3.554607    4.213763 -0.659156
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  3.535307    4.078072 -0.542765
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  3.477362    3.957930 -0.480567
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  3.634341    3.893212 -0.258871
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  3.837569    3.882083 -0.044515
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  3.953072    3.896281  0.056791
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  3.529249    3.822875 -0.293625
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  2.940607    3.646421 -0.705814
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  2.473027    3.411742 -0.938715
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  2.037435    3.136881 -1.099446
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  1.503524    2.810210 -1.306685
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  1.042132    2.456594 -1.414462
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  0.974759    2.160227 -1.185468
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  0.972835    1.922749 -0.949914
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  0.665351    1.671269 -1.005918
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  0.294470    1.395909 -1.101439
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  0.081383    1.133004 -1.051621
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780 -0.215602    0.863283 -1.078885
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500 -0.525519    0.585523 -1.111041
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890 -0.698726    0.328673 -1.027399

Testing indicator 19/98: bamboo_ta.momentum.percentage_volume_oscillator

================================================================================
Testing percentage_volume_oscillator...
================================================================================

=== Percentage Volume Oscillator Test Results ===

Indicator Description:
Name:
    Percentage Volume Oscillator (PVO)

Description:
    The Percentage Volume Oscillator (PVO) is a technical indicator that shows the relationship
    between two moving averages of a security's volume. It is calculated by subtracting a slow
    exponential moving average (EMA) from a fast EMA and then dividing the result by the slow EMA.

More info:
    https://www.investopedia.com/terms/p/pvo.asp
    https://www.tradingview.com/script/DdT7MmPa/

Call with:
    pvo = bta.percentage_volume_oscillator(df)
    df['pvo'] = pvo['pvo']
    df['pvo_signal'] = pvo['pvo_signal']
    df['pvo_hist'] = pvo['pvo_hist']

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain the volume column.
    - volume_col (str): Name of the column containing volume data. Default is 'volume'.
    - window_slow (int): n period long-term. Default is 26.
    - window_fast (int): n period short-term. Default is 12.
    - window_sign (int): n period to signal. Default is 9.
    - fillna (bool): if True, fill nan values. Default is False.


Returns:
    pd.DataFrame: DataFrame with columns ['pvo', 'pvo_signal', 'pvo_hist'].

Last 32 rows of data with percentage_volume_oscillator values:
           date       open       high        low      close         volume        pvo  pvo_signal   pvo_hist
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  -8.134218    0.972794  -9.107012
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520 -11.985644   -1.618893 -10.366750
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810 -10.199467   -3.335008  -6.864459
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  -9.166425   -4.501292  -4.665134
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  -6.458856   -4.892804  -1.566052
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   8.230056   -2.268232  10.498288
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   7.186117   -0.377362   7.563480
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   0.862493   -0.129391   0.991884
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  -4.676918   -1.038897  -3.638021
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  -1.063935   -1.043904  -0.020031
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   1.220988   -0.590926   1.811914
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   0.304516   -0.411838   0.716353
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  -2.116108   -0.752692  -1.363417
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  -5.632144   -1.728582  -3.903562
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260 -10.328104   -3.448486  -6.879617
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775 -12.313562   -5.221502  -7.092060
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  -9.163772   -6.009956  -3.153816
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  -9.514613   -6.710887  -2.803726
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  -4.712688   -6.311247   1.598559
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  -0.065387   -5.062075   4.996688
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700   4.827980   -3.084064   7.912044
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430   0.799274   -2.307397   3.106671
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  -3.461762   -2.538270  -0.923493
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  -3.955623   -2.821740  -1.133883
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  -6.407907   -3.538974  -2.868934
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100 -10.676561   -4.966491  -5.710070
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270 -12.469976   -6.467188  -6.002788
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290 -12.416461   -7.657043  -4.759419
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900 -17.419363   -9.609507  -7.809856
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780 -20.083946  -11.704395  -8.379551
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500 -17.696998  -12.902915  -4.794082
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890 -18.143154  -13.950963  -4.192191

Testing indicator 20/98: bamboo_ta.momentum.qualitative_quantitative_estimation

================================================================================
Testing qualitative_quantitative_estimation...
================================================================================

=== Qqe Mod Test Results ===

Indicator Description:
Name:
    Qualitative Quantitative Estimation Modified (QQE Mod)

Description:
    The Qualitative Quantitative Estimation (QQE) is a technical indicator based on RSI 
    with a dynamic volatility-based trailing stop line. The modified version (QQE Mod) 
    incorporates two QQE calculations with different parameters and Bollinger Bands to 
    provide additional trading signals.

More info:
    https://www.tradingview.com/script/TpUW4muw-QQE-MOD/

Call with:
    qqe_df = bta.qqe_mod(df)
    df['qqe_line'] = qqe_df['qqe_line']
    df['hist'] = qqe_df['hist']
    df['qqe_up'] = qqe_df['qqe_up']
    df['qqe_down'] = qqe_df['qqe_down']

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain a 'close' column.
    - rsi_period (int): Period for the first RSI calculation. Default is 6.
    - rsi_smoothing (int): Smoothing period for the first RSI. Default is 5.
    - qqe_factor (int): Multiplication factor for the first QQE ATR. Default is 3.
    - threshold (int): Threshold for the first QQE. Default is 3.
    - bollinger_length (int): Length for Bollinger Bands calculation. Default is 50.
    - bb_multiplier (float): Multiplier for Bollinger Bands standard deviation. Default is 0.35.
    - rsi_period2 (int): Period for the second RSI calculation. Default is 6.
    - rsi_smoothing2 (int): Smoothing period for the second RSI. Default is 5.
    - qqe_factor2 (float): Multiplication factor for the second QQE ATR. Default is 1.61.
    - threshold2 (int): Threshold for the second QQE. Default is 3.

Returns:
    pd.DataFrame: DataFrame with 'qqe_line', 'hist', 'qqe_up', and 'qqe_down' columns.

Last 32 rows of data with qqe_mod values:
           date       open       high        low      close         volume   qqe_line       hist     qqe_up   qqe_down
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  15.946730  10.985682        NaN  10.985682
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  15.946730  11.419632        NaN  11.419632
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  14.072666   8.718449        NaN   8.718449
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  12.190369   6.935782        NaN   6.935782
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  12.190369  10.358519        NaN  10.358519
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  12.190369   8.699322        NaN   8.699322
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  12.190369  11.525750        NaN  11.525750
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   8.588951  13.522073        NaN  13.522073
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  11.577221  16.444047        NaN  16.444047
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  14.912011  10.055187        NaN  10.055187
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   9.589261   4.709717        NaN   4.709717
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   9.589261   7.755488        NaN   7.755488
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   9.589261   7.761854        NaN   7.761854
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   9.589261   9.544310        NaN   9.544310
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   5.941117  10.723073        NaN  10.723073
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  10.207175  14.960657        NaN  14.960657
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  14.367075  19.112991        NaN        NaN
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  17.206312  21.944426  21.944426        NaN
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  17.187534  12.367598        NaN  12.367598
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000   8.110277   3.139770        NaN   3.139770
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700   2.742781  -2.384591        NaN  -2.384591
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  -1.394933  -6.666547        NaN  -6.666547
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  -6.363180 -11.778452        NaN -11.778452
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  -9.953126 -15.491777        NaN -15.491777
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  -9.953126 -10.004190        NaN -10.004190
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100 -10.932968  -5.140447        NaN  -5.140447
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270 -10.932968  -7.282710        NaN  -7.282710
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290 -10.932968 -10.340037        NaN -10.340037
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900 -10.932968 -10.321714        NaN -10.321714
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  -6.352357 -12.269909        NaN -12.269909
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  -8.782217 -14.664816        NaN -14.664816
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  -8.782217 -14.221311        NaN -14.221311

Testing indicator 21/98: bamboo_ta.momentum.rate_of_change

================================================================================
Testing rate_of_change...
================================================================================

=== Rate Of Change Test Results ===

Indicator Description:
Name:
    Rate of Change (ROC)

Description:
    The Rate of Change (ROC) is a momentum oscillator that measures the percentage
    change in price between the current price and the price n periods ago.

More info:
    https://www.investopedia.com/terms/r/rateofchange.asp

Call with:
    df['roc'] = bta.rate_of_change(df, column='close', period=21)['roc']

Parameters:
    - df (pd.DataFrame): DataFrame containing the data.
    - column (str): The column name on which the ROC is to be applied. Default is 'close'.
    - period (int): Period for the ROC calculation. Default is 21.

Returns:
    pd.DataFrame: DataFrame with 'roc' column.

Last 32 rows of data with rate_of_change values:
           date       open       high        low      close         volume        roc
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  25.731851
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  20.922195
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   8.113698
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   8.979533
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   9.086696
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  11.016290
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   9.566705
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  10.205745
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  12.524040
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   7.530492
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   4.638905
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   7.252826
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   1.716049
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   2.560622
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   3.836908
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775   6.704747
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  14.029296
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  15.406465
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550   4.528228
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000   1.900674
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700   0.354443
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430   0.916936
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  -2.056805
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  -1.000776
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   2.935732
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   0.854349
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  -1.190389
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  -5.455950
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  -4.539617
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  -7.290495
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  -4.609974
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  -3.123415

Testing indicator 22/98: bamboo_ta.momentum.relative_momentum_index

================================================================================
Testing relative_momentum_index...
================================================================================

=== Relative Momentum Index Test Results ===

Indicator Description:
Name:
    Relative Momentum Index (RMI)

Description:
    The Relative Momentum Index (RMI) is an oscillator that applies the RSI formula
    to momentum rather than price.

More info:
    https://www.tradingview.com/script/DdT7MmPa/
    https://github.com/freqtrade/technical/blob/master/technical/indicators/indicators.py#L912

Call with:
    df['rmi'] = bta.relative_momentum_index(df, length=20, mom=5)['rmi']

Parameters:
    - df (pd.DataFrame): DataFrame containing the data.
    - length (int): Period for the EMA calculation. Default is 20.
    - mom (int): Momentum period. Default is 5.

Returns:
    pd.DataFrame: DataFrame with 'rmi' column.

Last 32 rows of data with relative_momentum_index values:
           date       open       high        low      close         volume        rmi
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  78.763766
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  81.032075
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  80.990880
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  81.088077
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  81.656196
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  81.942139
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  83.309074
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  85.237984
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  87.364820
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  84.030062
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  83.087102
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  83.872274
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  83.974631
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  84.177328
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  86.637293
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  89.925716
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  91.393106
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  92.827641
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  89.543745
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  79.465142
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  65.712993
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  52.493371
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  41.085571
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  36.789316
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  38.396827
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  40.651404
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  39.187051
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  38.285669
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  39.017021
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  33.806105
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  28.196967
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  26.570483

Testing indicator 23/98: bamboo_ta.momentum.relative_strength_index

================================================================================
Testing relative_strength_index...
================================================================================

=== Relative Strength Index Test Results ===

Indicator Description:
Name:
    Relative Strength Index (RSI)

Description:
    RSI measures the magnitude of recent price changes to evaluate overbought or oversold
    conditions in the price of a stock or other asset. This implementation follows 
    the pandas-ta library approach, which uses EWM (Exponential Weighted Moving Average)
    with alpha=1/period to implement Wilder's RMA (Rolling Moving Average).

More info:
    https://www.investopedia.com/terms/r/rsi.asp
    https://github.com/twopirllc/pandas-ta/blob/main/pandas_ta/momentum/rsi.py

Call with:
    df['rsi'] = bta.relative_strength_index(df, column='close', period=14)['rsi']

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain at least the column specified.
    - column (str): The column on which RSI is to be calculated. Default is "close".
    - period (int): The period over which RSI is to be calculated. Default is 14.
    - scalar (float): How much to magnify the result. Default is 100.

Returns:
    pd.DataFrame: DataFrame with 'rsi' column.

Last 32 rows of data with relative_strength_index values:
           date       open       high        low      close         volume        rsi
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  65.796678
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  66.890760
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  63.128532
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  63.143592
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  67.463164
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  62.716275
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  66.976856
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  67.108850
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  68.980379
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  58.267921
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  56.580656
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  64.020502
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  61.226614
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  63.405684
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  63.394200
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  67.881186
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  69.958663
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  70.056863
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  54.816382
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  49.458091
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  50.116049
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  49.087622
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  45.008400
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  44.432817
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  52.542811
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  54.006959
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  46.646436
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  43.997085
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  46.203787
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  43.334612
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  41.647336
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  43.606598

Testing indicator 24/98: bamboo_ta.momentum.smoothed_rate_of_change

================================================================================
Testing smoothed_rate_of_change...
================================================================================

=== Smoothed Rate Of Change Test Results ===

Indicator Description:
Name:
    Smoothed Rate of Change (SROC)

Description:
    The Smoothed Rate of Change (SROC) is a momentum oscillator that applies
    an exponential moving average (EMA) to the Rate of Change (ROC) to smooth
    out short-term fluctuations.

More info:
    https://www.tradingview.com/script/jFQn4jYZ-WaveTrend-with-Crosses-LazyBear/

Call with:
    df['sroc'] = bta.smoothed_rate_of_change(df, roclen=21, emalen=13, smooth=21)['sroc']

Parameters:
    - df (pd.DataFrame): DataFrame containing the data.
    - roclen (int): Period for the ROC calculation. Default is 21.
    - emalen (int): Period for the EMA calculation. Default is 13.
    - smooth (int): Smoothing period for the ROC calculation. Default is 21.

Returns:
    pd.DataFrame: DataFrame with 'sroc' column.

Last 32 rows of data with smoothed_rate_of_change values:
           date       open       high        low      close         volume       sroc
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  30.291513
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  28.826908
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  25.358085
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  22.698676
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  20.480787
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  19.012127
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  17.512565
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  16.375403
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  15.787621
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  14.532464
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  13.016433
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  12.126502
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  10.480237
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   9.240625
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   8.414934
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775   8.155678
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740   9.000630
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466   9.912356
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550   9.117938
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000   8.060085
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700   6.916635
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430   6.039392
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360   4.851456
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   4.006207
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   3.851827
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   3.409617
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   2.743765
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   1.529996
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   0.635460
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  -0.540078
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  -1.120917
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  -1.405022

Testing indicator 25/98: bamboo_ta.momentum.stochastic_momentum_index

================================================================================
Testing stochastic_momentum_index...
================================================================================

=== Stochastic Momentum Index Test Results ===

Indicator Description:
Name:
    Stochastic Momentum Index (SMI)

Description:
    The Stochastic Momentum Index (SMI) Indicator was developed by William Blau
    in 1993 and is considered to be a momentum indicator that can help identify
    trend reversal points.

More info:
    

Call with:
    df['smi'] = bta.stochastic_momentum_index(df, k_length=9, d_length=3)['smi']

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'high', 'low', and 'close' columns.
    - k_length (int): Period for %K. Default is 9.
    - d_length (int): Period for %D. Default is 3.

Returns:
    pd.DataFrame: DataFrame with 'smi' column populated.

Last 32 rows of data with stochastic_momentum_index values:
           date       open       high        low      close         volume        smi
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  23.704129
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  32.549574
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  33.150463
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  31.397210
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  45.421103
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  30.595909
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  29.464767
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  31.486594
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  38.585923
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  30.063892
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  17.690140
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  24.499115
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  30.050523
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  39.143227
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  47.158966
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  58.672835
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  66.128961
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  68.585491
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  46.610958
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  12.877248
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  -7.766432
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430 -20.511861
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360 -34.785194
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030 -46.516554
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880 -42.629294
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100 -33.608008
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270 -35.127213
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290 -40.340008
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900 -38.889477
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780 -43.399341
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500 -50.691076
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890 -52.998528

Testing indicator 26/98: bamboo_ta.momentum.stochastic_rsi

================================================================================
Testing stochastic_rsi...
================================================================================

=== Stochastic Rsi Test Results ===

Indicator Description:
Name:
    Stochastic RSI (StochasticRSI)

Description:
    The Stochastic RSI is a technical momentum oscillator that combines Stochastic Oscillator
    and Relative Strength Index (RSI). It is used to identify overbought and oversold conditions
    in the market by applying the Stochastic formula to RSI values rather than price data.
    
    Originally developed by Tushar Chande and Stanley Kroll, it provides a more sensitive indicator
    than standard RSI or Stochastic oscillators alone, operating within a 0-100 range.

More info:
    https://www.investopedia.com/terms/s/stochrsi.asp

Calculation:
    - Calculate RSI for the given period (length_rsi) using Wilder's smoothing method
    - Find lowest and highest RSI values over the stochastic period (length_stoch)
    - Apply the Stochastic formula to RSI: 100 * (RSI - MinRSI) / (MaxRSI - MinRSI)
    - Smooth the %K line using SMA with period (smooth_k)
    - Smooth the %D line using SMA with period (smooth_d) on the %K line

Parameters:
    - df (pd.DataFrame): DataFrame containing the data with a 'close' column.
    - length_rsi (int): Period for the RSI calculation. Default is 14.
    - length_stoch (int): Period for the Stochastic calculation. Default is 14.
    - smooth_k (int): Smoothing period for %K line. Default is 3.
    - smooth_d (int): Smoothing period for %D line. Default is 3.
    - mamode (str): Moving average type for smoothing ('sma' or 'ema'). Default is 'sma'.

Call with:
    stoch_rsi = bta.stochastic_rsi(df, length_rsi=14, length_stoch=14, smooth_k=3, smooth_d=3)
    df['stoch_rsi_k'] = stoch_rsi['stoch_rsi_k']
    df["stoch_rsi_d"] = stoch_rsi["stoch_rsi_d"]

Returns:
    pd.DataFrame: DataFrame with 'stoch_rsi_k' and 'stoch_rsi_d' columns.

Last 32 rows of data with stochastic_rsi values:
           date       open       high        low      close         volume  stoch_rsi_k  stoch_rsi_d
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060    26.211940    23.519972
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520    27.153124    27.101387
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810    18.245376    23.870147
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830    13.963567    19.787356
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280    14.887369    15.698771
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662    14.222028    14.357654
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100    22.381297    17.163565
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900    23.829822    20.144382
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880    55.206025    33.805715
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950    44.399980    41.145276
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330    33.333333    44.313113
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910    20.000034    32.577782
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450    32.489448    28.607605
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230    50.836708    34.442063
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260    49.153062    44.159739
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775    67.042095    55.677288
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740    82.028169    66.074442
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466    97.045114    82.038459
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550    66.666667    81.913317
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000    33.333333    65.681705
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700     1.064720    33.688240
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430     1.064720    11.820925
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360     1.064720     1.064720
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030     0.000000     0.709814
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880    10.549978     3.871566
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100    23.004610    11.184863
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270    25.884222    19.812937
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290    15.334244    21.407692
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900     5.702228    15.640231
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780     2.822616     7.953029
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500     2.822616     3.782487
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890     4.959260     3.534831

Testing indicator 27/98: bamboo_ta.momentum.stochastics_oscillator

================================================================================
Testing stochastics_oscillator...
================================================================================

=== Stochastics Oscillator Test Results ===

Indicator Description:
Name:
    Stochastic Oscillator, Stochastic Signal, and Histogram Combined.

Description:
    The Stochastic Oscillator is a momentum indicator comparing a particular
    closing price of a security to a range of its prices over a certain period of time.

Call with:
    stoch = bta.stochastics_oscillator(df, 'high', 'low', 'close', 14, 3)
    df['stoch'] = stoch['stoch']
    df['stoch_signal'] = stoch['stoch_signal']
    df['stoch_hist'] = stoch['stoch_hist']

Parameters:
    - df (pandas.DataFrame): Input DataFrame.
    - high_col (str): Column name for 'High' prices. Default is 'high'.
    - low_col (str): Column name for 'Low' prices. Default is 'low'.
    - close_col (str): Column name for 'Close' prices. Default is 'close'.
    - window (int): Lookback period for stochastic calculation. Default is 14.
    - smooth_window (int): Lookback period for signal calculation. Default is 3.
    - fillna (bool): If True, fill nan values. Default is False.

Returns:
    pd.DataFrame: DataFrame with 'stoch', 'stoch_signal', and 'stoch_hist' columns.

Last 32 rows of data with stochastics_oscillator values:
           date       open       high        low      close         volume      stoch  stoch_signal  stoch_hist
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  70.734244     73.211597   -2.477353
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  76.468474     75.872873    0.595601
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  59.404334     68.869017   -9.464683
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  57.504169     64.458992   -6.954823
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  88.624528     68.511010   20.113518
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  47.436194     64.521630  -17.085437
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  68.007359     68.022694   -0.015334
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  68.678172     61.373908    7.304264
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  78.080586     71.588706    6.491880
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  49.870989     65.543249  -15.672260
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  44.841036     57.597537  -12.756501
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  78.193995     57.635340   20.558655
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  69.946203     64.327078    5.619125
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  80.396306     76.178834    4.217471
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  80.365028     76.902512    3.462516
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  94.671119     85.144151    9.526968
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  89.970491     88.335546    1.634945
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  87.569260     90.736957   -3.167697
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  54.355066     77.298273  -22.943206
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  23.317761     55.080696  -31.762935
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  34.570353     37.414394   -2.844040
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  31.385271     29.757795    1.627475
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  18.322864     28.092829   -9.769965
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  16.432099     22.046745   -5.614645
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  39.893651     24.882871   15.010779
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  44.645500     33.657083   10.988417
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  22.077906     35.539019  -13.461113
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  12.819051     26.514152  -13.695101
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  19.028365     17.975107    1.053258
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   9.340056     13.729157   -4.389101
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   7.499458     11.955960   -4.456502
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  13.641975     10.160496    3.481479

Testing indicator 28/98: bamboo_ta.momentum.true_strength_index

================================================================================
Testing true_strength_index...
================================================================================

=== True Strength Index Test Results ===

Indicator Description:
Name:
    True Strength Index (TSI)

Description:
    The True Strength Index (TSI) shows both trend direction and overbought/oversold conditions.

Call with:
    df['tsi'] = bta.true_strength_index(df, 'close', 25, 13)['tsi']

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain the close column.
    - close_col (str): Name of the column containing close price data. Default is 'close'.
    - window_slow (int): High period. Default is 25.
    - window_fast (int): Low period. Default is 13.
    - fillna (bool): If True, fill nan values. Default is False.

Returns:
    pd.DataFrame: DataFrame with 'tsi' column.

Last 32 rows of data with true_strength_index values:
           date       open       high        low      close         volume        tsi
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  40.553697
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  39.541979
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  37.589154
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  36.003349
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  35.805867
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  34.245578
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  34.156476
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  34.123371
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  34.636916
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  31.748541
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  28.890637
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  28.691007
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  27.634609
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  27.449331
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  27.298896
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  28.564751
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  30.276114
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  31.675884
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  27.929866
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  22.945171
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  19.266599
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  15.998351
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  11.926877
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   8.466227
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   7.821058
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   7.742259
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   5.311563
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   2.470551
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   0.819746
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  -1.440271
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  -3.811831
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  -5.224084

Testing indicator 29/98: bamboo_ta.momentum.ultimate_oscillator

================================================================================
Testing ultimate_oscillator...
================================================================================

=== Ultimate Oscillator Test Results ===

Indicator Description:
Name:
    Ultimate Oscillator

Description:
    The Ultimate Oscillator combines short-term, intermediate-term, and long-term
    price action into one oscillator.

Call with:
    df['uo'] = bta.ultimate_oscillator(df, 'high', 'low', 'close', 7, 14, 28)['uo']

Parameters:
    - df (pandas.DataFrame): DataFrame containing the data.
    - high_col (str): Name of the column containing high price data. Default is 'high'.
    - low_col (str): Name of the column containing low price data. Default is 'low'.
    - close_col (str): Name of the column containing close price data. Default is 'close'.
    - window1 (int): Short period. Default is 7.
    - window2 (int): Medium period. Default is 14.
    - window3 (int): Long period. Default is 28.
    - weight1 (float): Weight of short BP average for UO. Default is 4.0.
    - weight2 (float): Weight of medium BP average for UO. Default is 2.0.
    - weight3 (float): Weight of long BP average for UO. Default is 1.0.
    - fillna (bool): If True, fill nan values. Default is False.

Returns:
    pd.DataFrame: DataFrame with 'uo' column.

Last 32 rows of data with ultimate_oscillator values:
           date       open       high        low      close         volume         uo
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  48.984334
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  48.541998
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  54.078265
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  59.804394
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  61.683560
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  56.262845
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  56.602101
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  57.746371
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  58.950746
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  58.984359
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  58.536482
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  59.735323
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  60.184156
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  61.232151
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  60.353109
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  60.736455
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  63.772150
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  60.980438
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  46.294525
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  44.241027
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  48.843347
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  47.679248
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  43.407503
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  43.792299
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  50.047769
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  56.150673
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  55.888363
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  47.061599
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  49.618492
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  49.201313
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  46.699081
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  39.633172

Testing indicator 30/98: bamboo_ta.momentum.waddah_attar_explosion

================================================================================
Testing waddah_attar_explosion...
================================================================================

=== Waddah Attar Explosion Test Results ===

Indicator Description:
Name:
    Waddah Attar Explosion Indicator

Description:
    The Waddah Attar Explosion indicator is used to identify potential breakout
    opportunities by combining the MACD and Bollinger Bands.

    Inspired by: https://www.tradingview.com/script/iu3kKWDI-Waddah-Attar-Explosion-LazyBear/

Call with:
    wae = bta.waddah_attar_explosion(df)
    df['trend_up'] = wae['trend_up']
    df['trend_down'] = wae['trend_down']
    df['explosion_line'] = wae['explosion_line']
    df['dead_zone_line'] = wae['dead_zone_line']

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain columns: 'open', 'high', 'low', and 'close'.
    - sensitivity (int): Sensitivity factor for the indicator. Default is 150.
    - fast_length (int): Length for the fast EMA. Default is 20.
    - slow_length (int): Length for the slow EMA. Default is 40.
    - channel_length (int): Length for the Bollinger Bands. Default is 20.
    - dead_zone (int): Dead zone factor for the indicator. Default is 20.
    - mult (float): Standard deviation multiplier for the Bollinger Bands. Default is 2.0.

Returns:
    pd.DataFrame: DataFrame with 'trend_up', 'trend_down', 'explosion_line', and 'dead_zone_line' columns.

Last 32 rows of data with waddah_attar_explosion values:
           date       open       high        low      close         volume      trend_up    trend_down  explosion_line  dead_zone_line
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060      0.000000  13366.520831    14600.412201              20
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520      0.000000  10826.191700    14319.238757              20
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810      0.000000  23375.333798    13396.500539              20
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830      0.000000  24633.908665    13017.078721              20
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280      0.000000   6588.273753    11767.672927              20
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662      0.000000  21545.011774    11310.314807              20
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100      0.000000   3397.930271    11103.038330              20
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900      0.000000   6607.896456    10270.098395              20
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880      0.000000   1071.837637     9682.761097              20
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950      0.000000  31917.148979     8791.900215              20
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330      0.000000  36366.402298     8447.874186              20
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910      0.000000   3681.862345     9099.775181              20
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450      0.000000  14927.261237     9310.063203              20
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230      0.000000   6830.991241     9980.337265              20
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260      0.000000   9756.194456    10551.920838              20
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775   9013.711694      0.000000    11214.085103              20
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  15025.936562      0.000000    11631.280572              20
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466   9540.936423      0.000000    12840.070267              20
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550      0.000000  37069.294528    12363.840425              20
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000      0.000000  54798.009925    12363.572974              20
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700      0.000000  48297.900830    12125.138938              20
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430      0.000000  48451.684288    12107.387045              20
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360      0.000000  59454.897766    12288.857233              20
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030      0.000000  56098.383941    12559.180110              20
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880      0.000000  24468.848192    12554.060340              20
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100      0.000000  18151.982474    12305.363780              20
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270      0.000000  43321.221235    12793.851515              20
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290      0.000000  49830.560419    13600.171582              20
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900      0.000000  37824.588402    13931.434284              20
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780      0.000000  45175.222991    14614.628179              20
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500      0.000000  47001.261713    15439.467420              20
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890      0.000000  36297.997654    15877.040628              20

Testing indicator 31/98: bamboo_ta.momentum.waddah_attar_explosion_atr

================================================================================
Testing waddah_attar_explosion_atr...
================================================================================

=== Waddah Attar Explosion Atr Test Results ===

Indicator Description:
Name:
    Waddah Attar Explosion ATR

Description:
    The Waddah Attar Explosion indicator is used to identify potential breakout
    opportunities by combining the MACD and Bollinger Bands. The dead zone line
    is based on ATR in this indicator.

    Inspired by: https://www.tradingview.com/script/d9IjcYyS-Waddah-Attar-Explosion-V2-SHK/

Call with:
    wae = bta.waddah_attar_explosion_atr(df)
    df['trend_up'] = wae['trend_up']
    df['trend_down'] = wae['trend_down']
    df['explosion_line'] = wae['explosion_line']
    df['dead_zone_line'] = wae['dead_zone_line']

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain columns: 'open', 'high', 'low', and 'close'.
    - sensitivity (int): Sensitivity factor for the indicator. Default is 150.
    - fast_length (int): Length for the fast EMA. Default is 20.
    - slow_length (int): Length for the slow EMA. Default is 40.
    - channel_length (int): Length for the Bollinger Bands. Default is 20.
    - mult (float): Standard deviation multiplier for the Bollinger Bands. Default is 2.0.

Returns:
    pd.DataFrame: DataFrame with 'trend_up', 'trend_down', 'explosion_line', and 'dead_zone_line' columns.

Last 32 rows of data with waddah_attar_explosion_atr values:
           date       open       high        low      close         volume      trend_up    trend_down  explosion_line  dead_zone_line
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060      0.000000  13366.520831    14979.706849     9858.354141
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520      0.000000  10826.191700    14691.228983     9839.029039
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810      0.000000  23375.333798    13744.519546     9878.833749
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830      0.000000  24633.908665    13355.240975     9880.957361
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280      0.000000   6588.273753    12073.377677     9945.398078
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662      0.000000  21545.011774    11604.138147    10348.700097
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100      0.000000   3397.930271    11391.476969    10464.152086
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900      0.000000   6607.896456    10536.898627    10418.532225
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880      0.000000   1071.837637     9934.303274    10413.999003
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950      0.000000  31917.148979     9020.299294    10571.296573
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330      0.000000  36366.402298     8667.336036    10614.081627
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910      0.000000   3681.862345     9336.172344    10738.441931
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450      0.000000  14927.261237     9551.923303    10750.506832
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230      0.000000   6830.991241    10239.609981    10742.541383
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260      0.000000   9756.194456    10826.042353    10710.617799
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775   9013.711694      0.000000    11505.408554    10751.987441
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  15025.936562      0.000000    11933.442074    10809.490157
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466   9540.936423      0.000000    13173.634134    10813.561125
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550      0.000000  37069.294528    12685.032624    10946.849774
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000      0.000000  54798.009925    12684.758226    11100.085346
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700      0.000000  48297.900830    12440.130067    11211.101513
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430      0.000000  48451.684288    12421.917009    11215.252638
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360      0.000000  59454.897766    12608.101493    11221.416121
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030      0.000000  56098.383941    12885.446912    11257.902000
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880      0.000000  24468.848192    12880.194140    11364.324870
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100      0.000000  18151.982474    12625.036852    11322.355432
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270      0.000000  43321.221235    13126.214695    11385.420597
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290      0.000000  49830.560419    13953.481628    11421.215481
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900      0.000000  37824.588402    14293.349989    11366.141536
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780      0.000000  45175.222991    14994.292135    11338.707881
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500      0.000000  47001.261713    15840.559341    11354.600652
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890      0.000000  36297.997654    16289.499979    11397.056636

Testing indicator 32/98: bamboo_ta.momentum.wave_trend

================================================================================
Testing wave_trend...
================================================================================

=== Wave Trend Test Results ===

Indicator Description:
Name:
    WaveTrend

Description:
    The WaveTrend is used to identify overbought and oversold conditions in the market.

Inspired by:
    https://www.tradingview.com/script/jFQn4jYZ-WaveTrend-with-Crosses-LazyBear/

Call with:
    wt = bta.wave_trend(df, chlen=10, avg=21, smalen=4)
    df['wt1'] = wt['wt1']
    df['wt2'] = wt['wt2']

Parameters:
    - df (pd.DataFrame): DataFrame containing the data.
    - chlen (int): Channel length for the EMA calculation. Default is 10.
    - avg (int): Average period for the EMA calculation. Default is 21.
    - smalen (int): Period for the SMA calculation. Default is 4.

Returns:
    pd.DataFrame: DataFrame with 'wt1' and 'wt2' columns.

Last 32 rows of data with wave_trend values:
           date       open       high        low      close         volume        wt1        wt2
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  50.246324  51.376871
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  49.355720  50.479488
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  46.522625  49.368893
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  41.448101  46.893193
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  43.122274  45.112180
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  43.316414  43.602353
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  48.052118  43.984727
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  51.588316  46.519780
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  54.599957  49.389201
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  48.957247  50.799410
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  40.267486  48.853252
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  42.956823  46.695378
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  46.941304  44.780715
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  49.554536  44.930037
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  52.333857  47.946630
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  57.469474  51.574793
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  62.912865  55.567683
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  66.387137  59.775833
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  60.598593  61.842017
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  48.198578  59.524293
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  34.424030  52.402084
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  26.288836  42.377509
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  16.409062  31.330126
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   7.502382  21.156077
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   4.689847  13.722532
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   5.772123   8.593354
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   2.082453   5.011701
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  -4.967152   1.894318
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900 -10.317792  -1.857592
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780 -16.309256  -7.377937
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500 -22.198778 -13.448244
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890 -24.648090 -18.368479

Testing indicator 33/98: bamboo_ta.momentum.wave_trend_oscillator

================================================================================
Testing wave_trend_oscillator...
================================================================================

=== Wave Trend Oscillator Test Results ===

Indicator Description:
Name:
    WaveTrend Oscillator

Description:
    The WaveTrend Oscillator is used to identify overbought and oversold conditions
    in the market.

    Inspired by:

Call with:
    df['wto'] = bta.wave_trend_oscillator(df, 'close')['wavetrend']

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain the source column.
    - src (str): The column to use for calculations. Default is 'close'.
    - n1 (int): Length for the first EMA. Default is 8.
    - n2 (int): Length for the second EMA. Default is 12.

Returns:
    pd.DataFrame: DataFrame with 'wavetrend' column.

Last 32 rows of data with wave_trend_oscillator values:
           date       open       high        low      close         volume  wavetrend
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   0.823656
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   1.585848
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  -4.216474
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  -6.603933
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   4.889640
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   2.786958
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  10.979981
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   9.933454
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  10.950891
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  -7.037707
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330 -17.923457
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  -4.012946
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   1.941331
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   7.378721
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   4.963324
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  10.375947
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  11.388044
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466   7.980630
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550 -11.389141
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000 -25.053214
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700 -26.057738
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430 -20.968924
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360 -18.896375
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030 -15.922635
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  -3.447070
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   6.088558
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  -1.511635
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290 -10.116472
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  -9.317264
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  -8.937378
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  -8.782634
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  -5.168846

Testing indicator 34/98: bamboo_ta.momentum.williams_r

================================================================================
Testing williams_r...
================================================================================

=== Williams R Test Results ===

Indicator Description:
Name:
    Williams %R

Description:
    The Williams %R is a momentum indicator that measures overbought and oversold levels.

More info:
    https://www.tradingview.com/support/solutions/43000501985/
    https://www.tradingview.com/script/REGZq58T-Williams-R/

Call with:
    df['williams_r'] = bta.williams_r(df, 'high', 'low', 'close', 14)['williams_r']

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain the high, low, and close columns.
    - high_col (str): Name of the column containing high price data. Default is 'high'.
    - low_col (str): Name of the column containing low price data. Default is 'low'.
    - close_col (str): Name of the column containing close price data. Default is 'close'.
    - lbp (int): Lookback period. Default is 14.
    - fillna (bool): If True, fill nan values. Default is False.

Returns:
    pd.DataFrame: DataFrame with 'williams_r' column.

Last 32 rows of data with williams_r values:
           date       open       high        low      close         volume  williams_r
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  -29.265756
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  -23.531526
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  -40.595666
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  -42.495831
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  -11.375472
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  -52.563806
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  -31.992641
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  -31.321828
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  -21.919414
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  -50.129011
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  -55.158964
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  -21.806005
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  -30.053797
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  -19.603694
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  -19.634972
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775   -5.328881
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  -10.029509
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  -12.430740
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  -45.644934
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  -76.682239
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  -65.429647
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  -68.614729
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  -81.677136
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  -83.567901
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  -60.106349
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  -55.354500
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  -77.922094
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  -87.180949
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  -80.971635
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  -90.659944
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  -92.500542
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  -86.358025

Testing indicator 35/98: bamboo_ta.trend.alligator_bands

================================================================================
Testing alligator_bands...
================================================================================

=== Alligator Bands Test Results ===

Indicator Description:
Name:
    Bill Williams Alligator Indicator

Description:
    The Alligator Indicator is used to identify trends and their direction in the market.
    It consists of three smoothed moving averages known as the Jaw, Teeth, and Lips.

More info:
    https://www.investopedia.com/terms/a/alligator.asp

Parameters:
    - df (pandas.DataFrame): DataFrame containing the data.
    - column (str): The column name on which the Alligator is to be applied. Default is 'close'.
    - jaw_period (int): Period for the Alligator's Jaw (blue line). Default is 13.
    - teeth_period (int): Period for the Alligator's Teeth (red line). Default is 8.
    - lips_period (int): Period for the Alligator's Lips (green line). Default is 5.
    - jaw_shift (int): Number of periods to shift the Jaw line into the future. Default is 8.
    - teeth_shift (int): Number of periods to shift the Teeth line into the future. Default is 5.
    - lips_shift (int): Number of periods to shift the Lips line into the future. Default is 3.

Call with:
    alligator_result = bta.alligator_bands(df, 'close', 13, 8, 5, jaw_shift=8, teeth_shift=5, lips_shift=3)
    df['jaw'] = alligator_result['jaw']
    df['teeth'] = alligator_result['teeth']
    df['lips'] = alligator_result['lips']

Returns:
    pd.DataFrame: DataFrame with 'jaw', 'teeth', and 'lips' columns.

Last 32 rows of data with alligator_bands values:
           date       open       high        low      close         volume            jaw         teeth        lips
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   90801.256154   95356.62500   95282.144
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   92132.209231   95544.26000   94876.460
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   92843.905385   95988.30000   94788.452
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   93232.982308   96157.97750   95468.048
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   93355.286923   96050.83750   96512.052
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   94012.019231   95740.33625   96507.554
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   94366.781538   95679.43375   96548.696
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   94895.480000   95422.00625   96774.160
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   95399.480000   95776.96625   96881.688
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   95916.487692   96604.73625   97392.820
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   96188.013077   96740.05125   98191.094
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   96308.253846   97252.15875   99243.074
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   96329.038462   97548.65750   98980.904
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   96179.317692   98136.35750   98910.378
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   96338.428462   98147.76875   99187.210
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775   96487.040000   98241.81625   99221.670
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740   97110.084615   98901.23000   99284.602
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466   97518.646923   99078.35125  100113.308
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550   97574.792308   99638.17875  101687.506
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000   97996.409231   99848.07375  102674.238
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700   98192.123846  100427.07375  103900.128
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430   98577.990000  101045.70750  103656.080
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360   98903.745385  102152.86625  102864.452
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   99567.081538  102604.24250  101532.742
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  100352.386923  102146.35000   99779.408
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  100932.880769  101871.49375   97589.914
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  101183.525385  101354.96125   96525.406
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  101008.219231  100575.74500   96765.750
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  100852.330769   99377.93000   97090.582
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  100558.669231   98453.54500   96790.504
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  100397.884615   97615.52750   96613.056
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  100266.228462   97063.97625   96696.762

Testing indicator 36/98: bamboo_ta.trend.bollinger_trend

================================================================================
Testing bollinger_trend...
================================================================================

=== Bollinger Trend Test Results ===

Indicator Description:
Name:
    Bollinger Trend Indicator

Description:
    The Bollinger Trend Indicator calculates the trend based on the difference
    between short and long Bollinger Bands.

More info:
    https://www.tradingview.com/script/UtMK7hNw-Bollinger-Trend/

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain at least the column specified.
    - column (str): The column on which BBTrend is to be calculated. Default is 'close'.
    - short_length (int): The period for the short Bollinger Bands. Default is 20.
    - long_length (int): The period for the long Bollinger Bands. Default is 50.
    - std_dev (float): The standard deviation multiplier for the Bollinger Bands. Default is 2.0.

Call with:
    df['bbtrend'] = bta.bollinger_trend(df, 'close', 20, 50, 2.0)['bbtrend']

Returns:
    pd.DataFrame: DataFrame with 'bbtrend' column.

Last 32 rows of data with bollinger_trend values:
           date       open       high        low      close         volume    bbtrend
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  30.532763
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  29.854428
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  29.166243
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  28.400286
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  28.090383
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  27.392525
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  26.867245
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  26.459202
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  26.060665
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  25.341085
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  24.345046
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  23.212493
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  21.943121
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  20.922467
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  19.823094
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  19.351807
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  19.100653
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  18.579930
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  17.892689
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  16.884981
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  15.909983
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  14.805307
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  13.709248
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  12.571171
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  11.341855
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  10.371973
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   9.184087
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   7.910032
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   6.587757
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   4.455304
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   1.439233
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   0.477443

Testing indicator 37/98: bamboo_ta.trend.bollinger_trend_fast_with_ma

================================================================================
Testing bollinger_trend_fast_with_ma...
================================================================================

=== Bollinger Trend Fast With Ma Test Results ===

Indicator Description:
Name:
    Bollinger Trend Indicator with Selectable Moving Average

Description:
    This function calculates a more responsive Bollinger Trend (BBTrend) and applies a
    selected moving average to the BBTrend.

More info:
    https://www.tradingview.com/script/UtMK7hNw-Bollinger-Trend/

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain at least the column specified.
    - column (str): The column on which BBTrend is to be calculated. Default is 'close'.
    - short_length (int): The period for the short Bollinger Bands. Default is 10.
    - long_length (int): The period for the long Bollinger Bands. Default is 50.
    - short_stddev (float): The standard deviation multiplier for the short Bollinger Bands. Default is 1.0.
    - long_stddev (float): The standard deviation multiplier for the long Bollinger Bands. Default is 2.0.
    - ma_type (str): The type of moving average to use ('SMA', 'EMA', 'LSMA', 'HMA', 'WMA'). Default is 'SMA'.
    - ma_length (int): The period for the moving average. Default is 14.

Call with:
    result = bta.bollinger_trend_fast_with_ma(df, 'close', 10, 50, 1.0, 2.0, 'SMA', 14)
    df['bollinger_trend_fast'] = result['bbtrend']
    df['bollinger_trend_fast_ma'] = result['bbtrend_ma']

Returns:
    pd.DataFrame: DataFrame with 'bbtrend' and 'bbtrend_ma' columns.

Last 32 rows of data with bollinger_trend_fast_with_ma values:
           date       open       high        low      close         volume    bbtrend  bbtrend_ma
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  35.837313   37.496342
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  34.231304   37.912235
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  32.328545   37.941329
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  30.765277   37.521489
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  29.570664   36.759225
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  29.048408   35.972811
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  29.086057   35.166988
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  28.492501   34.327520
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  28.112638   33.441521
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  26.926129   32.538328
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  25.765102   31.625437
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  25.092088   30.692891
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  24.478990   29.758544
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  24.125803   28.847201
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  23.231080   27.946756
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  23.065737   27.149216
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  22.665820   26.459021
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  22.341536   25.857325
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  21.100200   25.252292
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  20.142934   24.616187
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  19.274447   23.915358
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  17.491755   23.129590
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  15.594103   22.235409
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  13.345398   21.265357
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  11.595120   20.253215
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   9.429405   19.134452
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   6.615766   17.858508
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   3.499138   16.385174
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   1.723720   14.848934
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   0.247450   13.219057
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  -1.317580   11.505957
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  -2.308727    9.745224

Testing indicator 38/98: bamboo_ta.trend.breakouts

================================================================================
Testing breakouts...
================================================================================

=== Breakouts Test Results ===

Indicator Description:
Name:
    S/R Breakouts and Retests

Description:
    Makes it easy to work with Support and Resistance.
    Find Retests, Breakouts, and the next levels.

More info:
    https://www.tradingview.com/script/iHKi8BGJ-S-R-Breakouts-and-Retests/

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'high', 'low', and 'close' columns.
    - length (int): Lookback period.

Call with:
    breakout = bta.breakouts(df, length=20)
    df['support_level'] = breakout['support_level']
    df['resistance_level'] = breakout['resistance_level']
    df['support_breakout'] = breakout['support_breakout']
    df['resistance_breakout'] = breakout['resistance_breakout']
    df['support_retest'] = breakout['support_retest']
    df['potential_support_retest'] = breakout['potential_support_retest']
    df['resistance_retest'] = breakout['resistance_retest']
    df['potential_resistance_retest'] = breakout['potential_resistance_retest']

Returns:
    pd.DataFrame: DataFrame with event columns populated.

Last 32 rows of data with breakouts values:
           date       open       high        low      close         volume  support_level  resistance_level  support_breakout  resistance_breakout  support_retest  potential_support_retest  resistance_retest  potential_resistance_retest
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060           0.00              0.00             False                 True               0                         0                  0                            0
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520           0.00              0.00             False                 True               0                         0                  0                            0
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810           0.00              0.00             False                 True               0                         0                  0                            0
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830         336.29              0.00             False                 True               0                         0                  0                            0
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280           0.00              0.00             False                 True               0                         0                  0                            0
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662         843.61           4499.99             False                 True               0                         0                  1                            1
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100         395.10              0.00             False                 True               0                         0                  0                            0
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900           0.00              0.00             False                 True               0                         0                  0                            0
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880           0.00              0.00             False                 True               0                         0                  0                            0
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950           0.00              0.00             False                 True               0                         0                  0                            0
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330           0.00              0.00             False                 True               0                         0                  1                            1
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910           0.00              0.00             False                 True               0                         0                  1                            1
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450           0.00              0.00             False                 True               0                         0                  1                            1
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230           0.00              0.00             False                 True               0                         0                  1                            1
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260           0.00              0.00             False                 True               0                         0                  0                            0
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775         641.63           1162.00             False                 True               0                         0                  0                            0
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740        1821.37           2543.07             False                 True               0                         0                  0                            0
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466        5118.00            559.93             False                 True               0                         0                  0                            0
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550        1139.00              0.00             False                 True               0                         0                  0                            0
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000         159.66              0.00             False                 True               0                         0                  1                            1
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700         777.34              0.00             False                 True               0                         0                  1                            1
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430        3724.01              0.00             False                 True               0                         0                  1                            1
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360        4855.99              0.00             False                 True               0                         0                  1                            1
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030        1055.99              0.00             False                 True               0                         0                  1                            1
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880         540.22              0.00             False                 True               0                         0                  1                            1
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100         405.17              0.00             False                 True               0                         0                  1                            1
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270        1648.62              0.00             False                 True               0                         0                  1                            1
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290           0.00              0.00             False                 True               0                         0                  1                            1
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900         654.90              0.00             False                 True               0                         0                  1                            1
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780         980.10              0.00             False                 True               0                         0                  1                            1
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500         143.00              0.00              True                False               1                         1                  0                            0
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890           0.00              0.00              True                False               1                         1                  0                            0

Testing indicator 39/98: bamboo_ta.trend.exponential_moving_average

================================================================================
Testing exponential_moving_average...
================================================================================

=== Exponential Moving Average Test Results ===

Indicator Description:
Name:
    Exponential Moving Average (EMA)

Description:
    The Exponential Moving Average gives more weight to recent prices and thus reacts
    more quickly to price changes than the Simple Moving Average.

More info:
    https://www.investopedia.com/terms/e/ema.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain at least the column specified.
    - column (str): The column on which EMA is to be calculated. Default is 'close'.
    - period (int): The period over which EMA is to be calculated. Default is 21.

Call with:
    df['ema'] = bta.exponential_moving_average(df, "close", 21)['ema']

Returns:
    pd.DataFrame: DataFrame with 'ema' column, where first `period-1` values are NaN.

Last 32 rows of data with exponential_moving_average values:
           date       open       high        low      close         volume           ema
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  91215.271670
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  91757.990609
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  92129.138735
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  92467.370668
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  93023.729699
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  93380.266090
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  93958.500081
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  94492.453710
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  95094.011555
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  95292.416868
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  95410.651698
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  95930.137908
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  96300.515371
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  96766.309428
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  97189.372207
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  97850.701097
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  98596.879179
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  99282.048345
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  99365.863041
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  99192.771855
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  99066.650778
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  98905.317980
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  98567.222709
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  98232.154281
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  98271.374801
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  98376.668001
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  98141.661819
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  97792.331653
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  97565.756048
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  97217.796408
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  96815.455825
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  96520.959841

Testing indicator 40/98: bamboo_ta.trend.hull_moving_average

================================================================================
Testing hull_moving_average...
================================================================================

=== Hull Moving Average Test Results ===

Indicator Description:
Name:
    Hull Moving Average (HMA)

Description:
    The Hull Moving Average (HMA) is an improved moving average that is responsive and
    has minimal lag. It involves the combination of WMA (Weighted Moving Average) with
    different periods.

More info:
    https://alanhull.com/hull-moving-average

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain at least the column specified.
    - column (str): The column on which HMA is to be calculated. Default is 'close'.
    - period (int): The period over which HMA is to be calculated. Default is 9.

Call with:
    df['hma'] = bta.hull_moving_average(df, 'close', 9)['hma']

Returns:
    pd.DataFrame: DataFrame with 'hma' column.

Last 32 rows of data with hull_moving_average values:
           date       open       high        low      close         volume            hma
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   96359.550148
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   97287.865444
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   97264.968185
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   96757.635519
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   97000.130556
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   97221.415889
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   98248.090630
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   99350.922000
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  100578.228259
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  100358.447778
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   99012.978556
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   98729.126074
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   99074.186000
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  100286.661778
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  101367.459926
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  102866.342667
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  104754.171148
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  106419.663556
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  105614.287148
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  102506.454296
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700   99034.535889
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430   96516.141889
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360   94913.985889
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   94012.535556
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   94732.563074
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   96525.822407
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   97433.300407
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   96824.864593
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   95634.269370
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   94275.015333
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   93149.371000
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   92616.868741

Testing indicator 41/98: bamboo_ta.trend.least_squares_moving_average

================================================================================
Testing least_squares_moving_average...
================================================================================

=== Least Squares Moving Average Test Results ===

Indicator Description:
Name:
    Least Squares Moving Average (LSMA)

Description:
    LSMA uses linear regression to compute the trend of the data over a specified period.
    It fits a straight line to the data points using the method of least squares to depict
    the direction of movement.

More info:
    https://www.fidelity.com/learning-center/trading-investing/technical-analysis/technical-indicator-guide/lsma

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain at least the column specified.
    - column (str): The column on which LSMA is to be calculated. Default is 'close'.
    - period (int): The period over which LSMA is to be calculated. Default is 21.

Call with:
    df['lsma'] = bta.least_squares_moving_average(df, 'close', 50)['lsma']

Returns:
    pd.DataFrame: DataFrame with 'lsma' column.

Last 32 rows of data with least_squares_moving_average values:
           date       open       high        low      close         volume           lsma
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   98565.018528
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   98191.492727
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   98149.322294
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   97949.067100
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   98362.924329
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   98088.309394
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   98537.876494
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   98848.125584
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   99195.456623
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   98774.213030
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   98319.065455
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   98800.854286
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   99378.781169
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  100241.574762
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  100954.575281
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  102180.860952
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  103139.220043
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  103841.932511
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  103679.407879
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  102952.936450
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  102436.792208
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  101724.838485
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  100701.679827
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   99522.329004
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   99027.582078
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   98892.978052
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   97945.378268
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   97014.061342
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   96339.759567
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   95568.788398
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   94360.559134
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   93284.619351

Testing indicator 42/98: bamboo_ta.trend.percent_price_channel

================================================================================
Testing percent_price_channel...
================================================================================

=== Percent Price Channel Test Results ===

Indicator Description:
Name:
    Percent Change Channel (PCC)

Description:
    PCC is like KC unless it uses percentage changes in price to set channel distance.
    This channel creates bands based on the percentage change of price rather than
    absolute price movements, making it more adaptive to different price levels.

More info:
    https://www.tradingview.com/script/6wwAWXA1-MA-Streak-Change-Channel/

Parameters:
    - df (pandas.DataFrame): Input DataFrame containing the data.
    - period (int): Period for the ZEMA calculation. Default is 20.
    - mult (int): Multiplier for the range. Default is 2.

Call with:
    pcc_result = bta.percent_price_channel(df, period=20, mult=2)
    df['pcc_upper'] = pcc_result['pcc_upper']
    df['pcc_rangema'] = pcc_result['pcc_rangema']
    df['pcc_lower'] = pcc_result['pcc_lower']

Returns:
    pd.DataFrame: DataFrame with 'pcc_upper', 'pcc_rangema', and 'pcc_lower' columns.

Last 32 rows of data with percent_price_channel values:
           date       open       high        low      close         volume  pcc_upper  pcc_rangema  pcc_lower
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   7.203616     3.462291  -6.645549
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   6.760204     3.207879  -6.071314
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   6.600210     3.297623  -6.590283
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   6.338662     3.185749  -6.404334
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   7.226544     3.386765  -6.320515
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  10.636181     5.291931 -10.531541
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  11.462323     5.464232 -10.394604
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  10.089229     4.823170  -9.203452
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   9.505816     4.462504  -8.344199
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   9.750994     4.985410 -10.190644
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   9.393027     4.870188 -10.087724
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  10.789983     5.133179  -9.742732
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   9.873945     4.825855  -9.429474
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   9.332767     4.455348  -8.488624
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   8.375401     4.019516  -7.702664
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775   8.761142     3.976396  -7.144442
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740   8.958832     4.005888  -7.064718
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466   8.376031     3.787126  -6.772473
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550   8.175291     4.262715  -8.875568
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000   8.801925     4.812712 -10.448924
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700   9.485557     5.076760 -10.821482
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430   8.860327     4.775447 -10.241462
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360   8.071668     4.538314 -10.081587
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   8.046635     4.492468  -9.923237
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   9.448078     4.772504  -9.641939
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   8.602596     4.278009  -8.509440
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   8.168000     4.400955  -9.435820
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   7.927832     4.382569  -9.602445
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   7.250574     3.892851  -8.320830
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   6.474126     3.618631  -8.000399
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   6.388379     3.615958  -8.075452
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   6.924332     3.749412  -8.073317

Testing indicator 43/98: bamboo_ta.trend.pmax

================================================================================
Testing pmax...
================================================================================
Error during testing: pmax() missing 3 required positional arguments: 'period', 'multiplier', and 'length'

Testing indicator 44/98: bamboo_ta.trend.price_channel

================================================================================
Testing price_channel...
================================================================================

=== Price Channel Test Results ===

Indicator Description:
Name:
    Price Channel (PPC)

Description:
    The Price Channel % PC indicator calculates the percent change of the price channel.
    It calculates the highest high and lowest low of the trailing number of bars specified
    by the input period. The price channel calculates the highest high and lowest low of
    the trailing number of bars specified by the input period.

    When a market moves above the upper band, it is a sign of market strength. Conversely,
    when a market moves below the lower band, it is a sign of market weakness. A sustained
    move above or below the channel lines may indicate a significant breakout.

    The `percent_p` column represents the percentage position of the current closing price
    within the price channel defined by the highest high and lowest low over a specified
    period. It shows where the current closing price stands relative to the recent highest
    and lowest prices.

More info:
    https://www.investopedia.com/terms/p/price-channel.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame containing the data.
    - period (int): Period for the highest high and lowest low calculation. Default is 20.

Call with:
    ppc_result = bta.price_channel(df, period=20)
    df['ppc_upper'] = ppc_result['ppc_upper']
    df['ppc_mid'] = ppc_result['ppc_mid']
    df['ppc_lower'] = ppc_result['ppc_lower']
    df['percent_p'] = ppc_result['percent_p']

Returns:
    pd.DataFrame: DataFrame with 'ppc_upper', 'ppc_mid', 'ppc_lower', and 'percent_p' columns.

Last 32 rows of data with price_channel values:
           date       open       high        low      close         volume  ppc_upper     ppc_mid  ppc_lower  percent_p
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   99588.01   89902.010   80216.01  83.584452
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   99588.01   92330.005   85072.00  83.447035
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   99588.01   92858.000   86127.99  72.159105
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   99588.01   93128.110   86668.21  71.065187
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   99588.01   93330.695   87073.38  92.003839
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  104088.00   96405.000   88722.00  53.518352
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  104088.00   96405.000   88722.00  71.709228
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  104088.00   96732.450   89376.90  71.069397
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  104088.00   97222.500   90357.00  78.308863
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  104088.00   97294.000   90500.00  49.870989
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  104088.00   97294.000   90500.00  44.841036
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  104088.00   97294.000   90500.00  78.193995
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  104088.00   97294.000   90500.00  69.946203
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  104088.00   97294.000   90500.00  80.396306
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  104088.00   97294.000   90500.00  80.365028
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  105250.00   97875.000   90500.00  94.671119
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  107793.07   99146.535   90500.00  89.970491
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  108353.00   99426.500   90500.00  87.569260
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  108353.00   99426.500   90500.00  54.355066
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  108353.00   99426.500   90500.00  38.995463
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  108353.00   99426.500   90500.00  40.919957
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  108353.00   99426.500   90500.00  38.043970
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  108353.00   99426.500   90500.00  26.249202
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  108353.00   99426.500   90500.00  24.541926
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  108353.00   99426.500   90500.00  45.726657
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  108353.00  100292.770   92232.54  44.645500
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  108353.00  100292.770   92232.54  22.077906
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  108353.00  100292.770   92232.54  12.819051
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  108353.00  100292.770   92232.54  19.028365
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  108353.00  100292.770   92232.54   9.340056
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  108353.00   99941.725   91530.45   7.499458
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  108353.00   99941.725   91530.45  12.159572

Testing indicator 45/98: bamboo_ta.trend.range_filter

================================================================================
Testing range_filter...
================================================================================

=== Range Filter Test Results ===

Indicator Description:
Name:
    Range Filter Buy and Sell Indicator

Description:
    This indicator smooths price action using a range filter based on a volatility-adjusted
    moving average. It identifies uptrends and downtrends while filtering out noise.

More info:
    https://www.tradingview.com/script/J3TL15C9-Range-Filter-Strategy/

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain at least the "close" column.
    - column (str): The column on which the range filter is calculated. Default is "close".
    - period (int): Sampling period for smoothing range calculation. Default is 100.
    - multiplier (float): Multiplier for the smoothed range. Default is 3.0.
    - fillna (bool): If True, fills nan values. Default is False.

Call with:
    range_filter_result = bta.range_filter(df, "close", 100, 3.0)
    df["range_filter"] = range_filter_result["range_filter"]
    df["high_band"] = range_filter_result["high_band"]
    df["low_band"] = range_filter_result["low_band"]
    df["long_signal"] = range_filter_result["long_signal"]
    df["short_signal"] = range_filter_result["short_signal"]

Returns:
    pd.DataFrame: DataFrame with 'range_filter', 'high_band', 'low_band', 'long_signal', 'short_signal'.

Last 32 rows of data with range_filter values:
           date       open       high        low      close         volume   range_filter      high_band      low_band  long_signal  short_signal
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   95374.087854   98958.250707  91789.925002            0             0
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   95374.087854   98966.245717  91781.929992            0             0
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   95374.087854   98974.091473  91774.084236            0             0
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   95374.087854   98980.997480  91767.178229            0             0
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   95374.087854   98988.611117  91759.564592            0             0
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   95374.087854   98996.258874  91751.916835            0             0
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   96110.304367   99740.840000  92479.768735            0             0
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   96194.002150   99831.990000  92556.014300            0             0
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   97464.331971  101109.590000  93819.073942            0             0
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   97464.331971  101118.200221  93810.463721            0             0
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   97464.331971  101126.238028  93802.425913            0             0
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   97464.331971  101136.005032  93792.658909            0             0
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   97464.331971  101145.421599  93783.242343            0             0
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   97733.907961  101424.250000  94043.565923            0             0
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   97733.907961  101432.500267  94035.315656            0             0
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  100756.315752  104463.990000  97048.641505            0             0
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  102341.959536  106058.660000  98625.259071            0             0
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  102408.971909  106133.740000  98684.203818            0             0
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  102408.971909  106144.353827  98673.589991            0             0
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  101208.430854  104955.001708  97461.860000            0             1
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  101208.430854  104965.321619  97451.540089            0             0
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  101058.456247  104824.922494  97291.990000            0             0
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360   98962.533344  102738.796689  95186.270000            0             0
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   98666.673703  102451.877407  94881.470000            0             0
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   98666.673703  102462.050348  94871.297058            0             0
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   98666.673703  102471.625632  94861.721774            0             0
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   98666.673703  102482.325182  94851.022224            0             0
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   98125.195381  101951.360761  94299.030000            0             0
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   98125.195381  101961.400389  94288.990372            0             0
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   97584.315580  101430.431161  93738.200000            0             0
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   96647.583223  100503.116445  92792.050000            0             0
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   96647.583223  100511.957529  92783.208916            0             0

Testing indicator 46/98: bamboo_ta.trend.rolling_moving_average

================================================================================
Testing rolling_moving_average...
================================================================================

=== Rolling Moving Average Test Results ===

Indicator Description:
Name:
    Rolling Moving Average (RMA)

Description:
    The RMA function calculates the Rolling Moving Average (RMA) of a specified column
    in a DataFrame over a given period. It uses an exponential moving average (EMA)
    calculation with a specified smoothing factor (alpha) and returns a DataFrame
    containing the RMA values. This function allows for flexible moving average
    calculations based on any column in the input DataFrame.

More info:
    The RMA is similar to an EMA but with a different smoothing factor calculation.
    It's used in indicators like RSI.

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain the specified column.
    - column (str): The column on which RMA is to be calculated.
    - period (int): The period over which RMA is to be calculated.

Call with:
    df['rma'] = bta.rolling_moving_average(df, 'close', 14)['rma']

Returns:
    pd.DataFrame: DataFrame with 'rma' column.

Last 32 rows of data with rolling_moving_average values:
           date       open       high        low      close         volume           rma
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  88977.419291
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  89563.687913
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  90012.040205
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  90429.015190
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  91011.751248
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  91435.599730
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  92028.831178
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  92586.199666
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  93195.013261
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  93486.545885
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  93708.435465
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  94238.190074
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  94650.054355
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  95133.925472
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  95582.930796
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  96217.292167
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  96920.247013
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  97578.353655
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  97765.900536
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  97744.183355
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  97748.558830
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  97715.946771
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  97535.255573
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  97345.699460
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  97439.833785
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  97581.959943
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  97454.077090
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  97228.716583
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  97090.951113
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  96851.468891
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  96561.510399
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  96348.259656

Testing indicator 47/98: bamboo_ta.trend.simple_moving_average

================================================================================
Testing simple_moving_average...
================================================================================

=== Simple Moving Average Test Results ===

Indicator Description:
Name:
    Simple Moving Average (SMA)

Description:
    The Simple Moving Average is the unweighted mean of the previous 'period' data points.

More info:
    https://www.investopedia.com/terms/s/sma.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain at least the column specified.
    - column (str): The column on which SMA is to be calculated. Default is 'close'.
    - period (int): The period over which SMA is to be calculated. Default is 21.

Call with:
    df['sma'] = bta.simple_moving_average(df, 'close', 50)['sma']

Returns:
    pd.DataFrame: DataFrame with 'sma' column.

Last 32 rows of data with simple_moving_average values:
           date       open       high        low      close         volume           sma
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  92682.810476
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  93483.532857
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  93826.039048
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  94202.119048
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  94593.172381
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  95051.269524
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  95465.972857
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  95906.214286
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  96442.100000
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  96766.499524
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  96970.414286
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  97296.054286
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  97376.395714
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  97496.979048
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  97675.436190
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  97988.005238
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  98609.369524
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  99284.063810
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  99490.773333
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  99577.339048
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  99593.788571
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  99635.883810
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  99540.697619
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  99495.023810
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  99629.018571
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  99669.127143
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  99614.173333
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  99355.039524
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  99139.230476
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  98788.211905
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  98574.668095
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  98431.001429

Testing indicator 48/98: bamboo_ta.trend.ssl_channels

================================================================================
Testing ssl_channels...
================================================================================

=== Ssl Channels Test Results ===

Indicator Description:
Name:
    SSL Channels

Description:
    SSL Channels is an indicator based on the concept of using different moving averages
    to identify trends. This function calculates the SSL Down and SSL Up series.

More info:
    https://www.tradingview.com/script/xl7XbPTM-SSL-Channel-Chart/

Parameters:
    - df (pandas.DataFrame): Input DataFrame containing the data.
    - length (int): Period for the SMA calculation. Default is 10.
    - mode (str): Type of moving average to use. Currently only 'sma' is supported.

Call with:
    ssl_result = bta.ssl_channels(df, length=10, mode='sma')
    df['ssl_down'] = ssl_result['ssl_down']
    df['ssl_up'] = ssl_result['ssl_up']

Returns:
    pd.DataFrame: DataFrame with 'ssl_down' and 'ssl_up' columns.

Last 32 rows of data with ssl_channels values:
           date       open       high        low      close         volume    ssl_down      ssl_up
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   97975.018   94531.331
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   97859.818   94696.719
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   97714.017   94424.008
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   97453.684   94068.225
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   93953.531   97497.284
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   93743.512   98018.904
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   94262.574   98711.466
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   94967.760   99034.563
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   95369.530   99513.263
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   95248.036   99772.857
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   95064.489   99853.462
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   95060.925  100258.662
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   95552.589  100699.662
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   96115.272  101258.636
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   96717.430  101623.636
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775   97791.144  101739.836
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740   98526.272  102329.244
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466   99174.021  103120.626
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550   99308.251  103638.024
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  103796.442   99463.246
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  103792.742   99260.846
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  103558.003   99334.861
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  103048.811   98828.732
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  102513.177   98160.232
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  102196.976   97456.193
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  101628.891   97095.681
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  100845.954   96282.295
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   99765.112   95100.147
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   98686.013   94513.713
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   97940.002   94244.665
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   97619.152   94174.456
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   97290.091   93737.990

Testing indicator 49/98: bamboo_ta.trend.ssl_channels_atr

================================================================================
Testing ssl_channels_atr...
================================================================================

=== Ssl Channels Atr Test Results ===

Indicator Description:
Name:
    SSL Channels with ATR

Description:
    The ssl_channels_atr function calculates the SSL (Safe and Secure Levels) channels using
    the Average True Range (ATR) to adjust the Simple Moving Averages (SMA) of the high
    and low prices over a specified period. It determines the trend direction based on
    the comparison of a chosen price column with these adjusted SMAs and generates the
    SSL ATR Down and Up levels accordingly.

    This indicator helps identify potential trend reversals and continuations by providing
    dynamic support and resistance levels.

More info:
    https://www.tradingview.com/script/xl7XbPTM-SSL-Channel-Chart/

Parameters:
    - df (pandas.DataFrame): Input DataFrame containing the data.
    - length (int): Period for the SMA calculation. Default is 21.
    - atr_period (int): Period for the ATR calculation. Default is 14.
    - column (str): The column to use for the moving average calculations. Default is 'close'.

Call with:
    ssl_result = bta.ssl_channels_atr(df, column='close', length=14, atr_period=7)
    df['ssl_atr_down'] = ssl_result['ssl_atr_down']
    df['ssl_atr_up'] = ssl_result['ssl_atr_up']

Returns:
    pd.DataFrame: DataFrame with 'ssl_atr_down' and 'ssl_atr_up' columns.

Last 32 rows of data with ssl_channels_atr values:
           date       open       high        low      close         volume  ssl_atr_down     ssl_atr_up
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  86956.252857   97765.769048
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  87912.475952   98501.825952
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  88550.673095   98948.316905
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  89014.383095   99192.782619
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  89340.075476   99543.004524
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  88905.398810  100745.766429
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  89083.079048  101470.816190
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  89514.237857  101870.483571
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  89997.075714  102332.250952
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  90167.635000  102799.552619
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  90365.385238  102995.327619
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  90505.275952  103389.449762
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  90663.137857  103651.761190
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  90802.661667  103721.291667
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  90920.301429  103947.202381
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  91048.694762  104399.207619
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  91507.990238  104875.820714
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  92178.187857  105534.671667
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  92418.123333  106129.242381
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  92932.020238  105962.779286
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  92776.913810  105950.293333
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  92681.000476  106159.684762
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  92576.230238  106177.243095
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  92704.584524  105883.837381
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  92568.040952  106171.491429
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  93019.618810  105891.977381
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  93133.658810  105805.310714
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  92918.745714  105694.694286
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  92726.129048  105439.047619
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  92577.338095  105032.639524
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  92521.596667  104668.808095
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  92331.122857  104657.243333

Testing indicator 50/98: bamboo_ta.trend.t3_average

================================================================================
Testing t3_average...
================================================================================

=== T3 Average Test Results ===

Indicator Description:
Name:
    T3 Average

Description:
    The T3 average is a smoothed moving average designed to reduce lag while maintaining
    responsiveness to price changes. This implementation uses multiple exponential moving
    averages (EMA) to achieve its smoothing effect.

More info:
    Tim Tillson's T3 indicator: 
    https://www.investopedia.com/terms/t/t3-oscillator.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame containing the data.
    - length (int): Period for the EMA calculation. Default is 5.

Call with:
    df['t3_average'] = bta.t3_average(df, length=5)['t3_average']

Returns:
    pd.DataFrame: DataFrame with 't3_average' column.

Last 32 rows of data with t3_average values:
           date       open       high        low      close         volume     t3_average
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   96059.161141
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   96324.708902
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   96463.711382
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   96465.434566
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   96700.439558
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   96926.220830
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   97401.463412
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   98033.507981
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   98822.406327
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   99171.568297
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   99024.943802
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   99112.093245
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   99332.504060
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   99752.525089
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  100256.647973
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  101088.899548
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  102259.095518
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  103515.119936
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  103945.038404
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  103336.791826
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  102164.568936
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  100800.957194
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360   99285.543187
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   97808.543528
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   96988.988392
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   96859.469627
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   96743.600712
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   96353.090056
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   95908.805607
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   95344.401175
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   94649.967093
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   94046.039077

Testing indicator 51/98: bamboo_ta.trend.ut_bot

================================================================================
Testing ut_bot...
================================================================================

=== Ut Bot Test Results ===

Indicator Description:
Name:
    UT Bot Indicator

Description:
    A trend-following indicator that uses ATR to create a trailing stop that helps identify trend changes
    and potential entry/exit points. Originally created by HPotter.

More info:
    https://www.tradingview.com/script/jKqk8tWu-UT-BOT-1-3/

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain OHLC data
    - column (str): The column name to use for calculations. Default is 'close'
    - key_value (float): Sensitivity multiplier for the ATR. Default is 3.0
    - atr_period (int): Period for ATR calculation. Default is 10

Call with:
    result = bta.ut_bot(df, 'close', 3.0, 10)
    df['ut_bot_stop'] = result['ut_bot_stop']
    df['ut_bot_position'] = result['ut_bot_position']
    df['ut_bot_buy'] = result['ut_bot_buy']
    df['ut_bot_sell'] = result['ut_bot_sell']

Returns:
    pd.DataFrame: DataFrame with 'ut_bot_stop', 'ut_bot_position', 'ut_bot_buy', and 'ut_bot_sell' columns

Last 32 rows of data with ut_bot values:
           date       open       high        low      close         volume  ut_bot_stop  ut_bot_position  ut_bot_buy  ut_bot_sell
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060    88497.542                1       False        False
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520    88497.542                1       False        False
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810    88497.542                1       False        False
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830    88497.542                1       False        False
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280    88497.542                1       False        False
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662    88497.542                1       False        False
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100    88497.542                1       False        False
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900    88497.542                1       False        False
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880    88678.391                1       False        False
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950    88678.391                1       False        False
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330    88678.391                1       False        False
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910    88678.391                1       False        False
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450    88678.391                1       False        False
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230    88678.391                1       False        False
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260    88678.391                1       False        False
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775    92617.914                1       False        False
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740    94649.744                1       False        False
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466    94649.744                1       False        False
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550    94649.744                1       False        False
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000    94649.744                1       False        False
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700    94649.744                1       False        False
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430    94649.744                1       False        False
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360    94649.744                1       False        False
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030    94649.744                1       False        False
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880    94649.744                1       False        False
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100    94649.744                1       False        False
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270    94649.744                1       False        False
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   108293.925               -1       False         True
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   107816.900               -1       False        False
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   104824.211               -1       False        False
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   103126.138               -1       False        False
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   103126.138               -1       False        False

Testing indicator 52/98: bamboo_ta.trend.weighted_moving_average

================================================================================
Testing weighted_moving_average...
================================================================================

=== Weighted Moving Average Test Results ===

Indicator Description:
Name:
    Weighted Moving Average (WMA)

Description:
    The Weighted Moving Average (WMA) gives more weight to recent data points and
    less weight to older data points.

More info:
    https://www.investopedia.com/articles/technical/060401.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame.
    - column (str): The column to calculate the WMA on.
    - period (int): The period for the WMA calculation.

Call with:
    df['wma'] = bta.weighted_moving_average(df, 'close', 10)['wma']

Returns:
    pd.DataFrame: DataFrame with 'wma' column.

Last 32 rows of data with weighted_moving_average values:
           date       open       high        low      close         volume            wma
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   95908.600000
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   96067.145273
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   96001.805818
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   95993.595091
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   96516.275455
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   96727.970727
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   97376.329273
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   97899.884545
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   98583.569273
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   98470.948364
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   98237.397091
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   98824.482000
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   99136.168364
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   99630.326182
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  100022.355636
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  100916.334545
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  101963.556000
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  102909.558909
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  102662.851818
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  101934.037091
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  101264.320727
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  100479.205455
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360   99380.923091
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   98314.822909
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   98055.338727
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   97985.247636
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   97345.236364
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   96620.522545
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   96292.979818
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   95770.637273
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   95143.970364
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   94750.992364

Testing indicator 53/98: bamboo_ta.trend.zero_exponential_moving_average

================================================================================
Testing zero_exponential_moving_average...
================================================================================

=== Zero Exponential Moving Average Test Results ===

Indicator Description:
Name:
    Zero Exponential Moving Average (ZEMA)

Description:
    The Zero Exponential Moving Average (ZEMA) is an improved version of the Exponential
    Moving Average (EMA) that reduces lag by incorporating a zero-lag component.

More info:
    The ZEMA applies the formula: 2 * EMA(period) - EMA(EMA(period)) to reduce lag.

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain at least the column specified.
    - column (str): The column on which ZEMA is to be calculated. Default is 'close'.
    - period (int): The period over which ZEMA is to be calculated. Default is 21.

Call with:
    df['zema'] = bta.zero_exponential_moving_average(df, 'close', 21)['zema']

Returns:
    pd.DataFrame: DataFrame with 'zema' column.

Last 32 rows of data with zero_exponential_moving_average values:
           date       open       high        low      close         volume           zema
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   98874.819048
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   99214.596352
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   99245.278617
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   99244.072318
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   99690.148498
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   99764.770809
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  100288.262546
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  100732.195613
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  101313.374962
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  101126.752068
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  100822.078998
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  101321.877462
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  101538.803568
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  101951.838750
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  102288.092299
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  103087.109263
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  104035.593950
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  104849.215560
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  104503.119323
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  103705.649216
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  103054.611035
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  102384.070215
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  101422.365404
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  100523.130887
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  100389.735825
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  100398.171841
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   99765.750599
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   98951.203121
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   98413.297742
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   97671.961911
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   96862.569389
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   96296.066732

Testing indicator 54/98: bamboo_ta.trend.zero_lag_exponential_moving_average

================================================================================
Testing zero_lag_exponential_moving_average...
================================================================================

=== Zero Lag Exponential Moving Average Test Results ===

Indicator Description:
Name:
    Zero Lag Exponential Moving Average (ZLEMA)

Description:
    ZLEMA is an Exponential Moving Average (EMA) that adjusts for lag, making it more responsive
    to recent price changes. It uses lagged data differences to adjust the EMA calculation,
    thereby reducing the inherent lag of EMA.

More info:
    Created by John Ehlers, the ZLEMA removes lag by subtracting older data from current data.
    https://en.wikipedia.org/wiki/Zero_lag_exponential_moving_average

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain at least the column specified.
    - column (str): The column on which ZLEMA is to be calculated. Default is 'close'.
    - period (int): The period over which ZLEMA is to be calculated. Default is 21.

Call with:
    df['zlema'] = bta.zero_lag_exponential_moving_average(df, 'close', 21)['zlema']

Returns:
    pd.DataFrame: DataFrame with 'zlema' column.

Last 32 rows of data with zero_lag_exponential_moving_average values:
           date       open       high        low      close         volume          zlema
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   99073.941390
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   98799.332173
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   98252.960157
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   97868.780143
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   97996.581948
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   98258.824498
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100   99100.433180
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   99527.745618
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  100168.423290
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950   99888.833900
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   99606.031727
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  100102.285206
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  100471.892006
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  101065.248187
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  101355.014715
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  102321.136105
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  103235.258277
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  104071.642979
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  103637.714527
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  103093.126842
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  102722.649857
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  101880.498052
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  100833.930047
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   99697.999134
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   99353.377394
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100   98902.634904
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   97686.444458
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   96302.614962
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   95765.649056
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   95242.820960
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   94564.260873
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   94136.601703

Testing indicator 55/98: bamboo_ta.utility.calculate_atr_stop_loss_take_profit

================================================================================
Testing calculate_atr_stop_loss_take_profit...
================================================================================
Error during testing: 'signal'

Testing indicator 56/98: bamboo_ta.utility.calculate_stop_loss_take_profit

================================================================================
Testing calculate_stop_loss_take_profit...
================================================================================
Error during testing: 'trade_signal'

Testing indicator 57/98: bamboo_ta.utility.consecutive_count

================================================================================
Testing consecutive_count...
================================================================================
Error: consecutive_count did not return a DataFrame

Testing indicator 58/98: bamboo_ta.utility.cumulative_return

================================================================================
Testing cumulative_return...
================================================================================
Error: cumulative_return did not return a DataFrame

Testing indicator 59/98: bamboo_ta.utility.daily_log_return

================================================================================
Testing daily_log_return...
================================================================================
Error: daily_log_return did not return a DataFrame

Testing indicator 60/98: bamboo_ta.utility.daily_return

================================================================================
Testing daily_return...
================================================================================
Error: daily_return did not return a DataFrame

Testing indicator 61/98: bamboo_ta.utility.drop_na

================================================================================
Testing drop_na...
================================================================================

=== Drop Na Test Results ===

Indicator Description:
Name:
    Drop NA

Description:
    This utility function cleans a DataFrame by removing rows with NaN values and
    handling problematic values in numeric columns. It addresses three common issues
    in financial data:
    
    1. NaN (Not a Number) values which can cause calculation errors
    2. Extremely large values that might cause overflow issues in calculations
    3. Zero values which can cause division by zero errors in certain calculations
    
    The function is particularly useful as a pre-processing step before applying
    technical indicators or conducting analysis.

More info:
    Data cleaning is a critical step in any data analysis workflow. In financial
    time series data, missing values, zeros, and extremely large values can lead
    to errors or misleading results in technical indicators.
    
    This function uses a threshold of e^709 (approximately 8.22e+307) to identify
    extremely large values, which is close to the largest finite floating-point
    number in Python.

Parameters:
    - df (pd.DataFrame): Input DataFrame containing financial data to be cleaned.

Call with:
    # Clean a dataframe before analysis
    clean_df = bta.drop_na(df)
    
    # Alternative: preserve original and use cleaned for calculations
    calc_df = bta.drop_na(df.copy())
    results = my_calculation_function(calc_df)

Returns:
    pd.DataFrame: A cleaned DataFrame with:
    - All rows containing NaN values removed
    - Extremely large values (>e^709) replaced with NaN and then removed
    - Zero values replaced with NaN and then removed

Last 32 rows of data with drop_na values:
           date       open       high        low      close         volume
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890

Testing indicator 62/98: bamboo_ta.utility.exhaustion_candles

================================================================================
Testing exhaustion_candles...
================================================================================
Error: exhaustion_candles did not return a DataFrame

Testing indicator 63/98: bamboo_ta.utility.exhaustion_lengths

================================================================================
Testing exhaustion_lengths...
================================================================================
Error: exhaustion_lengths did not return a DataFrame

Testing indicator 64/98: bamboo_ta.utility.first_crossed_above_second

================================================================================
Testing first_crossed_above_second...
================================================================================
Error during testing: first_crossed_above_second() missing 1 required positional argument: 'series2'

Testing indicator 65/98: bamboo_ta.utility.first_crossed_below_second

================================================================================
Testing first_crossed_below_second...
================================================================================
Error during testing: first_crossed_below_second() missing 1 required positional argument: 'series2'

Testing indicator 66/98: bamboo_ta.utility.get_min_max

================================================================================
Testing get_min_max...
================================================================================
Error during testing: get_min_max() missing 1 required positional argument: 'series2'

Testing indicator 67/98: bamboo_ta.utility.indicator_mixin

================================================================================
Testing indicator_mixin...
================================================================================
Error during testing: name '_check_fillna' is not defined

Testing indicator 68/98: bamboo_ta.utility.linear_decay

================================================================================
Testing linear_decay...
================================================================================
Error during testing: linear_decay() missing 4 required positional arguments: 'end', 'start_time', 'end_time', and 'trade_time'

Testing indicator 69/98: bamboo_ta.utility.linear_growth

================================================================================
Testing linear_growth...
================================================================================
Error during testing: linear_growth() missing 4 required positional arguments: 'end', 'start_time', 'end_time', and 'trade_time'

Testing indicator 70/98: bamboo_ta.utility.overbought_oversold

================================================================================
Testing overbought_oversold...
================================================================================
Error during testing: overbought_oversold() missing 1 required positional argument: 'indicator_col'

Testing indicator 71/98: bamboo_ta.utility.populate_leledc_major_minor

================================================================================
Testing populate_leledc_major_minor...
================================================================================
Error during testing: populate_leledc_major_minor() missing 4 required positional arguments: 'maj_qual', 'min_qual', 'maj_len', and 'min_len'

Testing indicator 72/98: bamboo_ta.utility.pump_dump_protection

================================================================================
Testing pump_dump_protection...
================================================================================

=== Pump Dump Protection Test Results ===

Indicator Description:
Name:
    Pump and Dump Protection

Description:
    This indicator helps detect potential pump-and-dump schemes in cryptocurrency markets
    by monitoring abnormal volume activity and rapid price movements. It calculates several
    metrics including short and long-term volume averages, the relative change in volume,
    and the RSI to identify suspicious market behavior.
    
    Pump-and-dump schemes typically involve artificially inflating an asset's price through
    false recommendations and heavy volume (the "pump") followed by selling off shares at
    the higher price (the "dump"). This indicator can help traders avoid being caught in
    such manipulative schemes.

More info:
    Key warning signs that this indicator identifies:
    - Abnormal increases in trading volume (compared to recent history)
    - Extreme RSI values indicating overbought conditions
    - Sudden, dramatic price increases with volume spikes
    
    When the indicator detects these conditions, it sets the 'pnd_volume_warn' flag to -1,
    suggesting caution and potential manipulation in the market.

Parameters:
    - df (pd.DataFrame): Input DataFrame with required OHLCV columns.
    - rsi_period (int, default=14): Period for RSI calculation.
    - short_volume_window (int, default=4): Period for short-term volume average.
    - long_volume_window (int, default=48): Period for long-term volume average.
    - volume_warn_threshold (float, default=5.0): Threshold for volume spike warning.

Call with:
    # Get pump and dump protection indicators
    pnd_data = bta.pump_dump_protection(
        df,
        rsi_period=14,
        short_volume_window=6,
        long_volume_window=72,
        volume_warn_threshold=4.0
    )
    
    # Add results to the original dataframe
    df['vol_short'] = pnd_data['volume_mean_short']
    df['vol_long'] = pnd_data['volume_mean_long']
    df['vol_change'] = pnd_data['volume_change_percentage']
    df['rsi'] = pnd_data['rsi']
    df['pnd_warning'] = pnd_data['pnd_volume_warn']

Returns:
    pd.DataFrame: A DataFrame with the following columns:
    - 'volume_mean_short': Short-term volume average
    - 'volume_mean_long': Long-term volume average
    - 'volume_change_percentage': Ratio between short and long-term volume
    - 'rsi': Relative Strength Index values
    - 'pnd_volume_warn': Warning flag (-1 for potential pump-and-dump, 0 otherwise)

Last 32 rows of data with pump_dump_protection values:
           date       open       high        low      close         volume  volume_mean_short  volume_mean_long  volume_change_percentage        rsi  pnd_volume_warn
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060       28043.396570      38000.502953                  0.737974  62.059810                0
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520       21989.690865      37568.599876                  0.585321  65.155210                0
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810       24275.722425      37449.323118                  0.648229  60.788942                0
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830       26307.107555      37572.012022                  0.700178  57.666840                0
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280       33643.783610      37957.893452                  0.886345  59.019627                0
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662       56889.564896      39649.478758                  1.434812  46.803389                0
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100       58662.280718      40417.309294                  1.451415  51.792876                0
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900       53438.436486      40469.173296                  1.320473  54.789695                0
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880       46129.051386      40119.976943                  1.149778  56.801597                0
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950       32135.897958      40731.438469                  0.788970  59.465381                0
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330       33800.687015      41276.822816                  0.818878  60.434438                0
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910       39506.146268      41592.738319                  0.949833  61.534249                0
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450       43160.918910      41483.412823                  1.040438  59.194532                0
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230       35149.649730      41693.019730                  0.843058  58.501366                0
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260       25770.403213      41808.405299                  0.616393  61.254037                0
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775       21889.187929      41666.367116                  0.525344  64.833880                0
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740       24906.766751      41482.487882                  0.600416  70.613754                0
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466       26696.991060      41527.882589                  0.642869  70.691812                0
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550       35726.064633      41964.463726                  0.851341  52.882558                0
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000       43955.683689      42315.412277                  1.038763  50.885682                0
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700       49351.116929      43406.296928                  1.136958  46.374496                0
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430       47955.768170      43374.793574                  1.105614  45.316031                0
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360       40217.226373      43157.156876                  0.931878  39.400642                0
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030       34633.068630      43145.817254                  0.802698  45.094939                0
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880       24830.590925      41469.717881                  0.598764  53.763021                0
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100       22578.246843      40836.483355                  0.552894  46.430169                0
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270       23037.881070      40517.134765                  0.568596  41.979956                0
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290       21460.505385      40716.284456                  0.527074  36.472533                0
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900       17638.422390      39602.863465                  0.445383  38.804676                0
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780       17413.882560      38170.620549                  0.456212  29.254313                0
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500       19020.646368      36718.944186                  0.518006  23.679586                0
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890       17298.338768      35319.947931                  0.489761  25.767550                0

Testing indicator 73/98: bamboo_ta.utility.regression_slope

================================================================================
Testing regression_slope...
================================================================================
Error: regression_slope did not return a DataFrame

Testing indicator 74/98: bamboo_ta.utility.same_length

================================================================================
Testing same_length...
================================================================================
Error during testing: same_length() missing 1 required positional argument: 'shorter'

Testing indicator 75/98: bamboo_ta.utility.st_dev

================================================================================
Testing st_dev...
================================================================================
Error during testing: st_dev() missing 1 required positional argument: 'period'

Testing indicator 76/98: bamboo_ta.utility.top_percent_change

================================================================================
Testing top_percent_change...
================================================================================
Error: top_percent_change did not return a DataFrame

Testing indicator 77/98: bamboo_ta.utility.z_score

================================================================================
Testing z_score...
================================================================================
Error during testing: Cannot aggregate non-numeric type: datetime64[ns]

Testing indicator 78/98: bamboo_ta.volatility.average_true_range

================================================================================
Testing average_true_range...
================================================================================

=== Average True Range Test Results ===

Indicator Description:
Name:
    Average True Range (ATR)

Description:
    The Average True Range (ATR), smoothed by the Moving Average, is a measure of volatility. 
    It was introduced by Welles Wilder in his book 'New Concepts in Technical Trading Systems'.
    ATR is a volatility indicator that measures market volatility by decomposing the entire
    range of an asset price for a specific period.

More info:
    https://www.investopedia.com/terms/a/atr.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain columns 'high', 'low', and 'close'.
    - period (int): Period for the ATR calculation. Default is 14.

Call with:
    df['atr'] = bta.average_true_range(df, 14)['atr']

Returns:
    pd.DataFrame: DataFrame with 'atr' column.

Last 32 rows of data with average_true_range values:
           date       open       high        low      close         volume          atr
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  3375.888571
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  3334.040714
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  3371.033571
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  3312.379286
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  3389.536429
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  4006.679286
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  4253.205714
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  4240.515000
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  4230.805714
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  4287.539286
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  4275.481429
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  4333.602143
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  4426.770714
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  4386.432143
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  4434.192857
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  4567.817143
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  4619.607857
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  4641.333571
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  4792.248571
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  4328.827857
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  4334.770000
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  4445.272857
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  4481.303571
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  4263.663571
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  4399.771429
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  4093.155000
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  4202.883571
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  4299.620000
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  4268.030000
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  4147.860000
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  4078.858571
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  4163.484286

Testing indicator 79/98: bamboo_ta.volatility.bbw_expansion

================================================================================
Testing bbw_expansion...
================================================================================
Error during testing: 'bb_upper'

Testing indicator 80/98: bamboo_ta.volatility.bollinger_bands

================================================================================
Testing bollinger_bands...
================================================================================

=== Bollinger Bands Test Results ===

Indicator Description:
Name:
    Bollinger Bands (BBANDS)

Description:
    Bollinger Bands are a type of statistical chart characterizing the prices and 
    volatility over time of a financial instrument or commodity. Bollinger Bands 
    consist of three lines: a middle band (SMA), an upper band, and a lower band.
    The upper and lower bands are calculated by adding and subtracting a standard
    deviation multiple from the middle band.

More info:
    https://www.investopedia.com/terms/b/bollingerbands.asp

Parameters:
    - df (pandas.DataFrame): DataFrame containing the data.
    - column (str): The column name on which the BBANDS is to be applied. Default is 'close'.
    - period (int): Look-back period to compute the moving average. Default is 20.
    - std_dev (float): Number of standard deviations to compute the upper and lower bands. Default is 2.0.
    - ddof (int): Degrees of Freedom to use in standard deviation calculation. Default is 0.

Call with:
    bb_result = bta.bollinger_bands(df, 'close', 20, 2, 0)
    df['bb_upper'] = bb_result['bb_upper']
    df['bb_middle'] = bb_result['bb_middle']
    df['bb_lower'] = bb_result['bb_lower']

Returns:
    pd.DataFrame: DataFrame with 'bb_upper', 'bb_middle', 'bb_lower' columns.

Last 32 rows of data with bollinger_bands values:
           date       open       high        low      close         volume       bb_upper   bb_middle      bb_lower
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  100598.656600  93298.4505  85998.244400
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  100884.929379  93725.3100  86565.690621
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  100817.990769  94119.7405  87421.490231
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  100902.004360  94393.4650  87884.925640
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  100840.387963  94956.5515  89072.715037
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  100907.386903  95252.2295  89597.072097
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  101261.444665  95709.9255  90158.406335
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  101343.774698  96208.7255  91073.676302
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  101582.381549  96741.0010  91899.620451
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  101385.235107  96989.2850  92593.334893
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  101328.544093  97104.6070  92880.669907
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  101794.888590  97245.0010  92695.113410
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  101955.647101  97300.6155  92645.583899
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  102478.376633  97488.2080  92498.039367
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  102940.166419  97664.2060  92388.245581
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  103843.947551  98236.9050  92629.862449
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  104757.220286  98941.5800  93125.939714
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  105875.146634  99455.1115  93035.076366
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  105865.033212  99683.1130  93501.192788
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  105864.992487  99683.2060  93501.419513
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  105815.647969  99753.0785  93690.509031
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  105812.112523  99758.4190  93704.725477
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  105870.130116  99725.7015  93581.272884
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  105956.880555  99677.2905  93397.700445
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  105958.133670  99681.1035  93404.073330
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  105957.983890  99805.3020  93652.620110
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  106004.765758  99607.8400  93210.914242
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  106131.277791  99331.1920  92531.106209
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  106006.429642  99040.7125  92074.995358
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  106171.113089  98863.7990  91556.484911
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  106393.485210  98673.7515  90954.017790
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  106234.821814  98296.3015  90357.781186

Testing indicator 81/98: bamboo_ta.volatility.donchian_channel

================================================================================
Testing donchian_channel...
================================================================================

=== Donchian Channel Test Results ===

Indicator Description:
Name:
    Donchian Channel

Description:
    The Donchian Channel is a volatility indicator composed of three lines: 
    an upper band, a middle band, and a lower band. The upper band represents 
    the highest price of a security over a specified period, while the lower band 
    represents the lowest price. The middle band is simply the average of the 
    upper and lower bands.
    
    Donchian Channels are used to identify potential breakouts, determine market 
    volatility, and identify trend strength. They are particularly popular in trend-following 
    systems like the Turtle Trading system.

More info:
    https://www.investopedia.com/terms/d/donchianchannels.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain columns 'high' and 'low'.
    - period (int): The lookback period to calculate the highest high and lowest low. Default is 20.

Call with:
    dc_result = bta.donchian_channel(df, 20)
    df['dc_upper'] = dc_result['dc_upper']
    df['dc_middle'] = dc_result['dc_middle']
    df['dc_lower'] = dc_result['dc_lower']
    df['dc_width'] = dc_result['dc_width']

Returns:
    pd.DataFrame: DataFrame with 'dc_upper', 'dc_middle', 'dc_lower', and 'dc_width' columns.

Last 32 rows of data with donchian_channel values:
           date       open       high        low      close         volume   dc_upper   dc_middle  dc_lower  dc_width
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060   99588.01   89902.010  80216.01  0.200938
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   99588.01   92330.005  85072.00  0.149364
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810   99588.01   92858.000  86127.99  0.140442
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830   99588.01   93128.110  86668.21  0.134792
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280   99588.01   93330.695  87073.38  0.126940
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  104088.00   96405.000  88722.00  0.158501
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  104088.00   96405.000  88722.00  0.154059
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  104088.00   96732.450  89376.90  0.147359
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  104088.00   97222.500  90357.00  0.135803
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  104088.00   97294.000  90500.00  0.139684
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  104088.00   97294.000  90500.00  0.140673
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  104088.00   97294.000  90500.00  0.134368
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  104088.00   97294.000  90500.00  0.135874
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  104088.00   97294.000  90500.00  0.133972
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  104088.00   97294.000  90500.00  0.133978
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  105250.00   97875.000  90500.00  0.141197
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  107793.07   99146.535  90500.00  0.163052
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  108353.00   99426.500  90500.00  0.168212
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  108353.00   99426.500  90500.00  0.178167
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  108353.00   99426.500  90500.00  0.183179
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  108353.00   99426.500  90500.00  0.182536
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  108353.00   99426.500  90500.00  0.183499
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  108353.00   99426.500  90500.00  0.187559
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  108353.00   99426.500  90500.00  0.188161
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  108353.00   99426.500  90500.00  0.180948
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  108353.00  100292.770  92232.54  0.162129
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  108353.00  100292.770  92232.54  0.168287
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  108353.00  100292.770  92232.54  0.170950
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  108353.00  100292.770  92232.54  0.169155
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  108353.00  100292.770  92232.54  0.171973
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  108353.00   99941.725  91530.45  0.181293
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  108353.00   99941.725  91530.45  0.179774

Testing indicator 82/98: bamboo_ta.volatility.keltner_channel

================================================================================
Testing keltner_channel...
================================================================================

=== Keltner Channel Test Results ===

Indicator Description:
Name:
    Keltner Channel

Description:
    The Keltner Channel is a volatility-based indicator that consists of three lines: 
    a middle line (typically an EMA), an upper band, and a lower band. The upper and 
    lower bands are calculated by adding and subtracting a multiple of the Average 
    True Range (ATR) from the middle line. 
    
    Unlike Bollinger Bands which use standard deviation, Keltner Channels use ATR, 
    making them more responsive to volatility changes based on trading ranges 
    rather than closing prices.

More info:
    https://www.investopedia.com/terms/k/keltnerchannel.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain columns 'high', 'low', and 'close'.
    - column (str): The column name to use for the middle line calculation. Default is 'close'.
    - ema_length (int): Period for the EMA calculation for the middle line. Default is 20.
    - atr_length (int): Period for the ATR calculation. Default is 10.
    - atr_mult (float): Multiplier for the ATR to determine the channel width. Default is 2.0.

Call with:
    kc_result = bta.keltner_channel(df, 'close', 20, 10, 2.0)
    df['kc_middle'] = kc_result['kc_middle']
    df['kc_upper'] = kc_result['kc_upper']
    df['kc_lower'] = kc_result['kc_lower']
    df['kc_width'] = kc_result['kc_width']

Returns:
    pd.DataFrame: DataFrame with 'kc_middle', 'kc_upper', 'kc_lower', and 'kc_width' columns.

Last 32 rows of data with keltner_channel values:
           date       open       high        low      close         volume     kc_middle       kc_upper      kc_lower  kc_width
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  91598.915053   98486.289053  84711.541053  0.150381
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  92130.940286   98457.138286  85804.742286  0.137331
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  92484.243116   99064.261116  85904.225116  0.142295
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  92804.761867   99575.679867  86033.843867  0.145917
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  93355.481689  100442.987689  86267.975689  0.151839
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  93697.400576  102248.184576  85146.616576  0.182519
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  94272.966235  103170.750235  85375.182235  0.188766
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  94802.397070  102936.003070  86668.791070  0.171591
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  95403.082111  103690.548111  87115.616111  0.173736
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  95581.500005  104631.142005  86531.858005  0.189360
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  95677.833338  105255.779338  86099.887338  0.200212
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  96196.611115  106592.085115  85801.137115  0.216130
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  96559.247200  106853.393200  86265.101200  0.213219
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  97022.580800  107309.308800  86735.852800  0.212048
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  97441.382628  107253.794628  87628.970628  0.201401
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  98110.202378  106007.586378  90212.818378  0.160990
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  98867.198342  106473.142342  91261.254342  0.153862
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  99559.249928  107452.459928  91666.039928  0.158563
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  99620.655650  108280.201650  90961.109650  0.173850
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  99415.056064  108081.448064  90748.664064  0.174348
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  99261.759296  108325.551296  90197.967296  0.182624
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  99074.162220  107520.446220  90627.878220  0.170504
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  98703.886771  107144.044771  90263.728771  0.171020
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  98339.847078  107045.737078  89633.957078  0.177057
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  98370.678785  107852.244785  88889.112785  0.192772
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  98471.528424  107537.948424  89405.108424  0.184143
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  98216.297146  107343.615146  89088.979146  0.185862
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  97843.224084  107173.154084  88513.294084  0.190712
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  97601.012267  105945.612267  89256.412267  0.170994
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  97233.125384  104623.799384  89842.451384  0.152020
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  96810.165824  103699.557824  89920.773824  0.142328
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  96502.150031  103606.352031  89397.948031  0.147234

Testing indicator 83/98: bamboo_ta.volatility.true_range

================================================================================
Testing true_range...
================================================================================

=== True Range Test Results ===

Indicator Description:
Name:
    True Range (TR)

Description:
    The True Range indicator measures market volatility. True Range is defined as the greatest of the following:
    - The current high minus the current low
    - The absolute value of the current high minus the previous close
    - The absolute value of the current low minus the previous close
    
    This measure accounts for gaps in price movement and provides a more comprehensive 
    measure of price volatility than simply looking at the high-low range.

More info:
    https://www.investopedia.com/terms/a/atr.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'high', 'low', and 'close' columns.

Call with:
    df['true_range'] = bta.true_range(df)['true_range']

Returns:
    pd.DataFrame: DataFrame with 'true_range' column.

Last 32 rows of data with true_range values:
           date       open       high        low      close         volume  true_range
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060     1371.94
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520     2142.12
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810     3735.00
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830     2727.35
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280     4412.17
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662    13588.00
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100     5917.27
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900     1595.18
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880     2693.30
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950     7065.88
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330     4013.46
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910     6229.76
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450     3228.36
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230     2690.26
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260     2040.59
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775     4012.86
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740     4460.07
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466     3031.51
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550     6524.98
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000     7100.11
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700     6000.46
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430     3142.22
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360     3197.73
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030     4018.92
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880     5918.97
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100     1937.13
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270     4764.56
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290     4044.57
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900     1598.33
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780     2330.48
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500     3494.05
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890     4216.27

Testing indicator 84/98: bamboo_ta.volatility.ulcer_index

================================================================================
Testing ulcer_index...
================================================================================

=== Ulcer Index Test Results ===

Indicator Description:
Name:
    Ulcer Index

Description:
    The Ulcer Index is a volatility indicator that measures downside risk. Unlike 
    standard deviation, which measures all volatility (both up and down), the 
    Ulcer Index only considers drawdowns from recent highs. This makes it a 
    better measure of investor pain because it focuses on losses.
    
    The indicator was created by Peter Martin and Byron McCann in 1987 and named 
    for the stomach ulcers that investors might get from worrying about downside 
    volatility in their investments.

More info:
    https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:ulcer_index

Parameters:
    - df (pandas.DataFrame): Input DataFrame containing price data.
    - column (str): The column name to use for the calculation. Default is 'close'.
    - period (int): The lookback period for the calculation. Default is 14.

Call with:
    df['ui'] = bta.ulcer_index(df, 'close', 14)['ulcer_index']

Returns:
    pd.DataFrame: DataFrame with 'ulcer_index' column.

Last 32 rows of data with ulcer_index values:
           date       open       high        low      close         volume  ulcer_index
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060     2.898272
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520     2.914367
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810     3.024199
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830     3.133974
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280     3.135056
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662     3.178878
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100     3.178878
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900     3.161745
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880     3.150359
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950     2.902478
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330     2.518975
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910     2.382262
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450     2.234362
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230     2.200591
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260     2.095694
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775     2.044299
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740     1.870590
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466     1.680205
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550     2.246319
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000     3.088343
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700     3.733108
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430     4.346648
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360     5.147133
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030     5.787496
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880     5.967273
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100     6.201482
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270     6.719605
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290     7.350814
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900     7.840728
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780     8.439200
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500     9.083353
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890     9.253780

Testing indicator 85/98: bamboo_ta.volume.accumulation_distribution_index

================================================================================
Testing accumulation_distribution_index...
================================================================================

=== Accumulation Distribution Index Test Results ===

Indicator Description:
Name:
    Accumulation/Distribution Index (ADI)

Description:
    The ADI acts as a leading indicator of price movements. It is calculated using the
    high, low, close, and volume data. The indicator evaluates the relationship between 
    price and volume, aiming to identify divergences that may precede price movements.

More info:
    https://www.investopedia.com/terms/a/accumulationdistribution.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'high', 'low', 'close', and 'volume' columns.
    - fillna (bool): If True, fill NaN values.

Call with:
    df['adi'] = bta.accumulation_distribution_index(df, fillna=True)['adi']

Returns:
    pd.DataFrame: DataFrame with 'adi' column.

Last 32 rows of data with accumulation_distribution_index values:
           date       open       high        low      close         volume           adi
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  1.221801e+07
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  1.222466e+07
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  1.221608e+07
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  1.223994e+07
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  1.227558e+07
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  1.226995e+07
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  1.228214e+07
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  1.228570e+07
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  1.229769e+07
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  1.229149e+07
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  1.229998e+07
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  1.232849e+07
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  1.231180e+07
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  1.232603e+07
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  1.232312e+07
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  1.233664e+07
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  1.234582e+07
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  1.233233e+07
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  1.228517e+07
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  1.225739e+07
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  1.231131e+07
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  1.230118e+07
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  1.229316e+07
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  1.229891e+07
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  1.231599e+07
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  1.232837e+07
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  1.231245e+07
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  1.229642e+07
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  1.230025e+07
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  1.229517e+07
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  1.228749e+07
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  1.228223e+07

Testing indicator 86/98: bamboo_ta.volume.chaikin_money_flow

================================================================================
Testing chaikin_money_flow...
================================================================================

=== Chaikin Money Flow Test Results ===

Indicator Description:
Name:
    Chaikin Money Flow (CMF)

Description:
    The Chaikin Money Flow measures the amount of Money Flow Volume over a specific period.
    It combines price and volume to form an indicator used to measure buying and selling 
    pressure. A positive value indicates buying pressure, while a negative value suggests 
    selling pressure.

More info:
    https://www.investopedia.com/terms/c/chaikinmoneyflow.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'high', 'low', 'close', and 'volume' columns.
    - window (int): Number of periods for the calculation. Default is 20.
    - fillna (bool): If True, fill NaN values with 0.

Call with:
    df['cmf'] = bta.chaikin_money_flow(df, window=20, fillna=True)['cmf']

Returns:
    pd.DataFrame: DataFrame with 'cmf' column.

Last 32 rows of data with chaikin_money_flow values:
           date       open       high        low      close         volume       cmf
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  0.132908
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  0.074308
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  0.047405
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  0.060154
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  0.164418
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  0.106381
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  0.128502
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  0.139040
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  0.178577
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  0.163143
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  0.136900
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  0.114442
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  0.069082
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  0.100696
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  0.076974
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  0.160194
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  0.213078
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  0.167339
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  0.094379
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  0.042614
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  0.118281
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  0.096218
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  0.099231
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  0.076219
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  0.053617
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  0.088785
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  0.047801
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  0.016602
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  0.004002
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  0.006144
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500 -0.021718
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890 -0.083059

Testing indicator 87/98: bamboo_ta.volume.ease_of_movement

================================================================================
Testing ease_of_movement...
================================================================================

=== Ease Of Movement Test Results ===

Indicator Description:
Name:
    Ease of Movement (EoM, EMV)

Description:
    Ease of Movement (EoM, EMV) and Signal Ease of Movement (SMA of EoM)

    Relates an asset's price change to its volume and is useful for assessing trend strength.
    The SMA of the EoM serves as a signal line for the indicator. Positive values indicate 
    the price is increasing with relative ease, while negative values suggest price is 
    decreasing with relative ease.

More info:
    https://www.investopedia.com/terms/e/easeofmovement.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'high', 'low', and 'volume' columns.
    - eom_length (int): Period for the EoM calculation. Default is 14.
    - seom_length (int): Period for the SMA of EoM calculation. Default is 14.
    - fillna (bool): If True, fill NaN values.

Call with:
    eom_df = bta.ease_of_movement(df, eom_length=14, seom_length=14, fillna=True)
    df['eom'] = eom_df['eom']
    df['seom'] = eom_df['seom']

Returns:
    pd.DataFrame: DataFrame with 'eom' and 'seom' columns.

Last 32 rows of data with ease_of_movement values:
           date       open       high        low      close         volume            eom           seom
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  -20290.832650   30391.795473
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520   -1649.087725   37065.857650
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  -49438.334098   29093.938314
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830 -100534.679394   15261.008134
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  186352.282065   22736.699225
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   61818.122776   10059.802432
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  216249.234575   18485.581663
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900   74912.945358   25537.877558
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880   66859.762992   35968.230376
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950 -304035.588127   26703.538109
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330 -110194.040983   33566.939074
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  414150.899084   47939.726769
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  237741.850762   59666.224748
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  -46142.347025   44700.013401
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  155229.425876   57237.174724
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  291341.809983   78165.095989
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  250469.115022   99587.056640
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  132901.730634  116261.085928
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550 -463648.048339   69832.490899
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000 -516592.457687   28517.449438
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700 -383332.897602  -14309.845718
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  366188.709920    6495.566036
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360 -350323.363744  -23303.228731
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030 -161653.939993  -13133.111007
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  499796.189469   30437.619740
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  277313.979955   20663.554088
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270 -229133.099221  -12684.656625
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290 -314259.542870  -31835.884900
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900 -111970.297772  -50921.579446
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780 -130474.037055  -81051.282806
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500 -113512.824327 -107049.992760
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  185829.865772 -103269.411678

Testing indicator 88/98: bamboo_ta.volume.force_index

================================================================================
Testing force_index...
================================================================================

=== Force Index Test Results ===

Indicator Description:
Name:
    Force Index (FI)

Description:
    The Force Index (FI) illustrates how strong the actual buying or selling pressure is.
    It combines price movement and volume to quantify the force behind a price move.
    A rising FI indicates increasing buying pressure, while a falling FI suggests 
    increasing selling pressure.

More info:
    https://www.investopedia.com/terms/f/force-index.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'close' and 'volume' columns.
    - window (int): Period for calculating the exponential moving average of the Force Index. Default is 13.
    - fillna (bool): If True, fill NaN values.

Call with:
    df['fi'] = bta.force_index(df, window=13, fillna=True)['fi']

Returns:
    pd.DataFrame: DataFrame with 'fi' column.

Last 32 rows of data with force_index values:
           date       open       high        low      close         volume            fi
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  2.269875e+07
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  2.133672e+07
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  1.099751e+07
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  9.472863e+06
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  2.526910e+07
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662 -4.120398e+06
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  1.445722e+07
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  1.258634e+07
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  1.345537e+07
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950 -1.800875e+07
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330 -2.048483e+07
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  6.884451e+06
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  1.220859e+06
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  5.489716e+06
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  4.696855e+06
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  1.369225e+07
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  2.114531e+07
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  1.843630e+07
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550 -2.681358e+07
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000 -4.458627e+07
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700 -3.513027e+07
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430 -3.183418e+07
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360 -3.310840e+07
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030 -2.980731e+07
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880 -1.275790e+07
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100 -9.351417e+06
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270 -1.902948e+07
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290 -2.196169e+07
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900 -1.762516e+07
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780 -1.813628e+07
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500 -1.927854e+07
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890 -1.432806e+07

Testing indicator 89/98: bamboo_ta.volume.money_flow_index

================================================================================
Testing money_flow_index...
================================================================================

=== Money Flow Index Test Results ===

Indicator Description:
Name:
    Money Flow Index (MFI)

Description:
    The Money Flow Index (MFI) uses both price and volume to measure buying and selling pressure.
    It is often referred to as volume-weighted RSI. MFI is a momentum indicator that analyzes
    the flow of money into and out of an asset. Values above 80 are considered overbought,
    while values below 20 are considered oversold.

More info:
    https://www.investopedia.com/terms/m/mfi.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'high', 'low', 'close', and 'volume' columns.
    - window (int): Period for calculating MFI. Default is 14.
    - fillna (bool): If True, fill NaN values.

Call with:
    df['mfi'] = bta.money_flow_index(df, window=14, fillna=True)['mfi']

Returns:
    pd.DataFrame: DataFrame with 'mfi' column.

Last 32 rows of data with money_flow_index values:
           date       open       high        low      close         volume        mfi
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  63.107465
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  66.914925
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  59.375864
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  52.100093
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  52.405602
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  36.293403
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  36.197609
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  39.607621
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  43.624753
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  43.258095
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  43.567928
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  43.405968
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  43.608115
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  43.081348
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  45.837592
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  46.523283
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  54.124051
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  60.320785
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  51.373296
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  56.939702
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  46.198269
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  47.053279
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  43.831723
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  45.762112
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  53.384360
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  50.916947
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  45.137400
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  39.723376
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  36.950720
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  32.338848
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  22.856740
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  20.351917

Testing indicator 90/98: bamboo_ta.volume.negative_volume_index

================================================================================
Testing negative_volume_index...
================================================================================

=== Negative Volume Index Test Results ===

Indicator Description:
Name:
    Negative Volume Index (NVI)

Description:
    The Negative Volume Index (NVI) measures price changes on days when trading volume 
    decreases compared to the previous day. Informed traders are thought to be more 
    active on low volume days, hence the NVI accumulates price rate of change only 
    on such days. The indicator can help identify trends led by smart money.

More info:
    https://www.investopedia.com/terms/n/nvi.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'close' and 'volume' columns.
    - signal_type (str): Type of signal smoothing ('EMA' or 'SMA'). Default is 'EMA'.
    - signal_length (int): Length for the EMA/SMA calculation. Default is 255.
    - fillna (bool): If True, fill NaN values.

Call with:
    nvi_df = bta.negative_volume_index(df, signal_type='EMA', signal_length=255, fillna=True)
    df['nvi'] = nvi_df['nvi']
    df['nvi_signal'] = nvi_df['nvi_signal']

Returns:
    pd.DataFrame: DataFrame with 'nvi' and 'nvi_signal' columns.

Last 32 rows of data with negative_volume_index values:
           date       open       high        low      close         volume          nvi   nvi_signal
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  1442.827627  1415.528273
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  1442.827627  1415.741549
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  1442.827627  1415.953159
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  1442.837091  1416.163190
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  1442.837091  1416.371580
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  1442.837091  1416.578341
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  1445.720367  1416.806013
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  1445.811754  1417.032621
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  1447.091504  1417.267456
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  1447.091504  1417.500456
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  1446.388898  1417.726147
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  1451.080749  1417.986730
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  1449.972507  1418.236619
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  1451.392406  1418.495648
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  1451.388216  1418.752622
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  1451.388216  1419.007587
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  1451.388216  1419.260561
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  1451.459007  1419.512111
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  1451.459007  1419.761696
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  1451.459007  1420.009332
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  1451.459007  1420.255032
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  1450.934036  1420.494712
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  1448.769706  1420.715610
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  1448.769706  1420.934783
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  1452.755848  1421.183385
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  1453.532244  1421.436110
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  1453.532244  1421.686861
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  1453.532244  1421.935653
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  1454.593729  1422.190795
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  1454.593729  1422.443943
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  1454.593729  1422.695113
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  1455.438575  1422.950921

Testing indicator 91/98: bamboo_ta.volume.on_balance_volume

================================================================================
Testing on_balance_volume...
================================================================================

=== On Balance Volume Test Results ===

Indicator Description:
Name:
    On Balance Volume (OBV)

Description:
    The On Balance Volume (OBV) indicator measures buying and selling pressure by accumulating 
    volume based on price movements. When the close price is higher than the previous close, 
    the volume is added to the OBV; when lower, it's subtracted. Rising OBV indicates buying 
    pressure, and falling OBV suggests selling pressure. This implementation includes an 
    optional signal line for additional trend confirmation.

More info:
    https://www.investopedia.com/terms/o/onbalancevolume.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'close' and 'volume' columns.
    - signal_type (str): Type of signal smoothing ('EMA' or 'SMA'). Default is 'SMA'.
    - signal_length (int): Length for the signal smoothing. Default is 21.
    - show_signal (bool): If True, calculate and return the signal line. Default is True.
    - fillna (bool): If True, fill nan values with 0. Default is False.

Call with:
    obv_df = bta.on_balance_volume(df, signal_type='SMA', signal_length=21, show_signal=True, fillna=True)
    df['obv'] = obv_df['obv']
    df['signal'] = obv_df['signal']

Returns:
    pd.DataFrame: DataFrame with 'obv' and 'signal' columns.

Last 32 rows of data with on_balance_volume values:
           date       open       high        low      close         volume            obv         signal
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060 -560541.616165 -617883.869268
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520 -543603.011645 -608148.679817
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810 -581561.681455 -604141.220632
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830 -545734.358625 -593794.370459
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280 -501883.821345 -585491.011565
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662 -611805.551007 -579720.615470
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100 -566756.017907 -574087.286880
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900 -551824.072007 -566661.109585
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880 -537211.075127 -557402.525006
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950 -591160.191077 -552929.376162
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330 -642868.880407 -552997.595706
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910 -605115.097497 -553277.692192
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450 -634347.184947 -558246.381438
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230 -612443.145717 -564371.512112
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260 -626634.848977 -569993.493243
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775 -604405.927202 -576042.715165
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740 -563103.524462 -577703.848815
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466 -534038.587996 -575225.760187
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550 -584346.585546 -577102.977506
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000 -639493.983546 -580234.140274
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700 -576609.847846 -581689.952881
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430 -600093.389276 -583573.370648
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360 -619447.219636 -587184.999600
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030 -652257.986666 -590551.490325
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880 -628583.761786 -594496.699999
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100 -614109.596686 -599840.784539
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270 -635301.963956 -600959.661346
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290 -661803.228246 -605485.718981
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900 -653417.335346 -610323.493426
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780 -666993.341126 -616503.601331
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500 -694612.763626 -621429.914309
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890 -675000.729736 -622960.002372

Testing indicator 92/98: bamboo_ta.volume.on_balance_volume_oscillator

================================================================================
Testing on_balance_volume_oscillator...
================================================================================

=== On Balance Volume Oscillator Test Results ===

Indicator Description:
Name:
    On Balance Volume (OBV) Oscillator

Description:
    The On Balance Volume (OBV) Oscillator measures the difference between the OBV and its 
    Exponential Moving Average (EMA). It helps in identifying trends and confirming price 
    movements. An increasing OBV oscillator indicates buying pressure, while a decreasing 
    one indicates selling pressure. Crossovers of the zero line can be used as potential 
    trading signals.

More info:
    https://www.investopedia.com/terms/o/onbalancevolume.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'close' and 'volume' columns.
    - length (int): Length for the EMA calculation. Default is 20.
    - fillna (bool): If True, fill nan values with 0.

Call with:
    df['obv_oscillator'] = bta.on_balance_volume_oscillator(df, length=20, fillna=True)['obv_oscillator']

Returns:
    pd.DataFrame: DataFrame with 'obv_oscillator' column.

Last 32 rows of data with on_balance_volume_oscillator values:
           date       open       high        low      close         volume  obv_oscillator
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060    63639.967932
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520    72904.422695
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810    31617.585944
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830    61021.584128
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280    94884.300322
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662   -13605.293212
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100    28449.550374
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900    39249.925201
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880    48733.119978
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950    -4719.234451
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330   -51053.835802
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910   -12033.381188
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450   -37335.424006
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230   -13961.729083
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260   -25472.153072
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775    -2934.352126
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740    34713.950556
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466    57704.707305
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550     6692.261207
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000   -43840.361860
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700    17230.081093
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430    -5657.892686
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360   -22629.654184
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030   -50160.381099
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880   -23963.665150
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100    -8585.738141
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270   -26942.095372
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290   -48353.515884
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900   -36161.182700
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780   -45000.313387
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500   -65703.570564
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890   -41701.866515

Testing indicator 93/98: bamboo_ta.volume.positive_volume_index

================================================================================
Testing positive_volume_index...
================================================================================

=== Positive Volume Index Test Results ===

Indicator Description:
Name:
    Positive Volume Index (PVI)

Description:
    The Positive Volume Index (PVI) measures price changes on days when the trading volume 
    increases compared to the previous day. It accumulates the price rate of change on those 
    days, helping to identify trends driven by high-volume activity. The PVI is often used 
    in conjunction with the Negative Volume Index (NVI) to understand different aspects of 
    market behavior.

More info:
    https://school.stockcharts.com/doku.php?id=technical_indicators:positive_volume_index

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'close' and 'volume' columns.
    - signal_type (str): Type of signal smoothing ('EMA' or 'SMA'). Default is 'EMA'.
    - signal_length (int): Length for the EMA/SMA calculation. Default is 255.
    - fillna (bool): If True, fill nan values.

Call with:
    pvi_df = bta.positive_volume_index(df, signal_type='EMA', signal_length=255, fillna=True)
    df['pvi'] = pvi_df['pvi']
    df['pvi_signal'] = pvi_df['pvi_signal']

Returns:
    pd.DataFrame: DataFrame with 'pvi' and 'pvi_signal' columns.

Last 32 rows of data with positive_volume_index values:
           date       open       high        low      close         volume        pvi  pvi_signal
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  57.511091   38.251001
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  57.511091   38.401470
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  58.317238   38.557062
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  56.933734   38.700630
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  56.933734   38.843076
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  59.789904   39.006723
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  58.124690   39.156082
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  58.124690   39.304275
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  58.124690   39.451309
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  58.124690   39.597195
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  54.333635   39.712323
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  54.333635   39.826552
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  54.333635   39.939889
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  54.333635   40.052340
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  54.333635   40.163913
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  54.333635   40.274614
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  57.335006   40.407898
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  58.861532   40.552067
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  58.861532   40.695110
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  53.274496   40.793386
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  50.537929   40.869515
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  50.890457   40.947804
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  50.890457   41.025481
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  50.890457   41.102551
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  50.570242   41.176517
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  50.570242   41.249906
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  50.570242   41.322721
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  46.911372   41.366382
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  45.353229   41.397530
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  45.353229   41.428434
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  43.714405   41.446293
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  42.705051   41.456127

Testing indicator 94/98: bamboo_ta.volume.price_volume_trend

================================================================================
Testing price_volume_trend...
================================================================================

=== Price Volume Trend Test Results ===

Indicator Description:
Name:
    Price Volume Trend (PVT)

Description:
    Based on cumulative volume that adds or subtracts a multiple of the percentage change in 
    share price trend. The PVT is similar to On Balance Volume (OBV) but instead of adding 
    or subtracting the entire volume, it adds or subtracts a portion of the volume based on 
    the percentage price change. This creates a more refined volume-based indicator that 
    responds proportionally to price movements.

More info:
    https://www.investopedia.com/terms/p/pvtrend.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'close' and 'volume' columns.
    - fillna (bool): If True, fill nan values.
    - smoothing_factor (int, optional): Will smooth PVT implementation with SMA.
    - signal_type (str): Type of signal smoothing ('SMA' or 'EMA').
    - signal_length (int): Length of the signal smoothing.
    - dropnans (bool): Drop NaN values after indicator calculated.

Call with:
    pvt_df = bta.price_volume_trend(df, fillna=True, signal_type='EMA', signal_length=21, dropnans=True)
    df['pvt'] = pvt_df['price_volume_trend']
    df['pvt_signal'] = pvt_df['signal']

Returns:
    pd.DataFrame: DataFrame with 'price_volume_trend' and 'signal' columns.

Last 32 rows of data with price_volume_trend values:
           date       open       high        low      close         volume  price_volume_trend         signal
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060       281614.105525  279048.729119
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520       281750.655556  279716.495808
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810       281225.496174  279955.483318
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830       281228.886738  280231.008784
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280       282481.332587  280452.343348
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662       280650.900394  280677.670373
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100       281949.802732  280867.979801
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900       281963.448565  281064.229089
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880       282150.458408  281278.554232
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950       280105.217840  281380.487533
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330       279741.909653  281422.679266
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910       281513.261037  281506.207048
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450       281189.298686  281433.385548
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230       281500.313939  281362.513432
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260       281499.719261  281306.152508
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775       282166.891570  281278.098908
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740       282797.383499  281401.011123
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466       282817.958862  281555.854059
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550       280007.233052  281493.791431
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000       278498.087486  281363.001212
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700       278719.771449  281217.720620
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430       278596.489714  281074.024629
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360       278177.608903  280903.879550
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030       278072.544151  280753.738977
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880       279016.232341  280648.374482
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100       279128.609167  280488.720986
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270       278353.207957  280379.307061
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290       277940.280393  280188.377425
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900       278029.295383  280001.036798
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780       277806.808438  279794.196323
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500       277528.030773  279671.473129
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890       277693.722273  279573.940397

Testing indicator 95/98: bamboo_ta.volume.relative_volume

================================================================================
Testing relative_volume...
================================================================================

=== Relative Volume Test Results ===

Indicator Description:
Name:
    Relative Volume (RVOL)

Description:
    Computes the Relative Volume (RVOL) indicator, which compares the current volume
    to a moving average of volume over a specified window. This helps identify periods
    of unusually high or low trading activity. Values greater than 1 indicate above-average 
    volume, while values less than 1 indicate below-average volume. Traders often look for 
    high relative volume to confirm breakouts or significant price movements.

More info:
    https://www.investopedia.com/terms/r/relative-volume.asp

Parameters:
    - df (pd.DataFrame): Input DataFrame containing a volume column.
    - volume_col (str): Name of the column containing volume data. Default is 'volume'.
    - window (int): Lookback window for calculating the Simple Moving Average (SMA) of volume. Default is 24.

Call with:
    df['rvol'] = bta.relative_volume(df, volume_col='volume', window=24)['rvol']

Returns:
    pd.DataFrame: DataFrame with an additional column:
        - 'rvol': The Relative Volume values.

Last 32 rows of data with relative_volume values:
           date       open       high        low      close         volume      rvol
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  0.315742
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  0.378331
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  0.846690
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  0.785364
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  0.977289
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  2.388590
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  1.027533
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  0.365536
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  0.373786
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  1.371166
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  1.275077
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  0.917869
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  0.723377
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  0.554475
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  0.370183
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  0.611043
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  1.141738
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  0.799487
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  1.354163
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  1.477303
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  1.675160
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  0.638089
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  0.531571
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  0.895940
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  0.639780
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  0.392243
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  0.585385
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  0.739973
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  0.244229
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  0.447732
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  0.933231
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  0.658332

Testing indicator 96/98: bamboo_ta.volume.time_relative_volume_oscillator

================================================================================
Testing time_relative_volume_oscillator...
================================================================================

=== Time Relative Volume Oscillator Test Results ===

Indicator Description:
Name:
    Time Relative Volume Oscillator (TRVO)

Description:
    Time Relative Volume Oscillator (TRVO) - Delta Mode
    
    This indicator measures relative volume compared to historical values and differentiates
    between buy and sell volumes. It first calculates a relative volume by comparing current
    volume to a historical average, then applies a sigmoid-like transformation to normalize
    the values. The volume is then split into buy and sell components based on where the close
    price sits within the high-low range. Finally, the indicator creates a "delta" or difference
    between short and long EMAs of the buy/sell percentage differences.

More info:
    This is a custom indicator inspired by volume profile analysis techniques used by 
    professional traders. The sigmoid transformation helps normalize volume spikes.

Parameters:
    - df (pd.DataFrame): Input DataFrame containing 'high', 'low', 'close', and 'volume'.
    - column (str): Column name for price source (default: "close").
    - relative_len (int): Number of previous periods used for relative volume calculation (default: 6).
    - delta_smoothing (int): Smoothing factor for the buy/sell volume difference (default: 9).
    - smoothing_line (bool): If True, applies EMA smoothing to buy/sell volume difference (default: True).
    - show_total_volume (bool): If True, includes the 'total_volume' column in the output DataFrame (default: False).

Call with:
    trvo_result = bta.time_relative_volume_oscillator(
        df,
        column="close",
        relative_len=6,
        delta_smoothing=9,
        smoothing_line=True,
        show_total_volume=False,
    )
    df["relative_buy_volume"] = trvo_result["relative_buy_volume"]
    df["relative_sell_volume"] = trvo_result["relative_sell_volume"]
    df["buy_vs_sell"] = trvo_result["buy_vs_sell"]
    df["smoothed_delta"] = trvo_result["smoothed_delta"]

Returns:
    pd.DataFrame: A DataFrame containing:
        - "relative_buy_volume": Volume attributed to buyers.
        - "relative_sell_volume": Volume attributed to sellers (negative).
        - "buy_vs_sell": Difference between buy and sell volume percentages.
        - "smoothed_delta": EMA-smoothed buy/sell volume difference.
        - "total_volume" (optional): Raw total volume for each period (if show_total_volume=True).

Last 32 rows of data with time_relative_volume_oscillator values:
           date       open       high        low      close         volume  relative_buy_volume  relative_sell_volume  buy_vs_sell  smoothed_delta
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060          1336.163731          -4465.268225    -0.539368    -9774.160667
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520          5437.992096          -2373.200574     0.392359   -10455.565090
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810         14551.153318         -23044.174392    -0.225906   -12190.297894
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830         34545.790040          -6932.365761     0.665734   -10692.183218
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280         55933.832996          -5771.429407     0.812936    -6348.077068
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662         54142.786018         -59995.347324    -0.051276    -3951.588729
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100         18535.182757         -10641.241745     0.270559    -1563.678740
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900          2948.497734          -1812.061194     0.238719      592.072514
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880          4248.692162           -418.320877     0.820733     5093.787082
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950         17064.751877         -21502.519633    -0.115066     6935.542325
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330         18580.565919         -13336.247591     0.164312     8120.099322
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910         15600.139984          -2177.323828     0.755047    11444.340707
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450          4020.950200         -14720.224689    -0.570897    10196.663373
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230         10968.770699          -2327.994001     0.649841    11286.671143
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260          2695.479686          -4090.156569    -0.205534    10106.653202
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775         10379.045560          -2528.172552     0.608254    11032.449271
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740         30041.322678         -19116.093154     0.222250    11650.142968
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466          7892.938402         -21565.383168    -0.464128     8949.778355
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550          2483.010514         -76932.674727    -0.937468     1889.914426
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000         19002.072259         -57574.275049    -0.503709    -6038.320160
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700         67812.517890          -5202.662913     0.857491    -8122.057928
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430          2911.297482          -7325.874824    -0.431230   -11943.935828
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360          2264.718734          -5473.078341    -0.414635   -16744.118176
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030         11550.254192          -8106.801615     0.175176   -19383.655100
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880          9827.502314          -1590.302437     0.721435   -17929.695361
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100          6262.319723           -486.157343     0.855921   -13086.013444
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270          1976.850235         -13920.968279    -0.751305   -13367.707197
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290          7323.398672         -29747.010790    -0.604892   -16496.789819
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900          4358.567510          -1624.589650     0.456946   -16599.725552
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780          4112.542750          -9040.279652    -0.374652   -18383.825414
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500         20980.076926         -37125.057652    -0.277858   -20821.417300
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890         10992.376897         -19058.670546    -0.268420   -23558.719860

Testing indicator 97/98: bamboo_ta.volume.volume_weighted_average_price

================================================================================
Testing volume_weighted_average_price...
================================================================================

=== Volume Weighted Average Price Test Results ===

Indicator Description:
Name:
    Volume Weighted Average Price (VWAP)

Description:
    The Volume Weighted Average Price (VWAP) equals the dollar value of all trading periods 
    divided by the total trading volume for the current day. VWAP is often used by institutional 
    traders to determine the quality of execution. This implementation provides a rolling VWAP 
    over a specified window period, making it usable across multiple timeframes.

More info:
    https://www.investopedia.com/terms/v/vwap.asp

Parameters:
    - df (pandas.DataFrame): Input DataFrame which should contain 'high', 'low', 'close', and 'volume' columns.
    - window (int): n period for rolling calculation. Default is 14.
    - fillna (bool): If True, fill nan values.

Call with:
    df['vwap'] = bta.volume_weighted_average_price(df, window=14, fillna=True)['volume_weighted_average_price']

Returns:
    pd.DataFrame: DataFrame with 'volume_weighted_average_price' column.

Last 32 rows of data with volume_weighted_average_price values:
           date       open       high        low      close         volume  volume_weighted_average_price
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060                   94833.227676
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520                   95110.604201
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810                   95558.021517
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830                   95816.532567
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280                   96130.049010
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662                   96212.846660
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100                   96261.716515
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900                   96280.965225
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880                   96327.061821
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950                   96588.717421
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330                   97000.311366
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910                   97339.041573
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450                   97611.578341
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230                   97769.833432
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260                   97902.376983
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775                   98173.733111
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740                   98900.538086
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466                   99570.445530
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550                   99999.401771
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000                  100489.551425
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700                  100051.124888
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430                   99954.585652
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360                   99779.287871
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030                   99681.608571
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880                   99926.085688
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100                   99923.235194
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270                   99732.039730
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290                   99396.113519
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900                   99240.366736
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780                   98840.574050
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500                   97757.044096
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890                   96925.763902

Testing indicator 98/98: bamboo_ta.volume.volume_weighted_average_price_bands

================================================================================
Testing volume_weighted_average_price_bands...
================================================================================

=== Volume Weighted Average Price Bands Test Results ===

Indicator Description:
Name:
    Volume-Weighted Average Price Bands (VWAPB)

Description:
    Calculates the Volume-Weighted Average Price (VWAP) along with upper and lower bands
    based on a rolling standard deviation. The VWAP provides a cumulative weighted average 
    price, while the bands create a channel that can help identify potential support and 
    resistance levels. Price movement outside these bands may indicate overbought or 
    oversold conditions.

More info:
    https://www.investopedia.com/terms/v/vwap.asp

Parameters:
    - df (pd.DataFrame): Input DataFrame containing the following required columns:
        - 'close': Closing price.
        - 'high': High price for each interval.
        - 'low': Low price for each interval.
        - 'volume': Trading volume for each interval.
    - window_size (int, default=20): The rolling window size for VWAP and standard deviation calculations.
    - num_of_std (float, default=1.0): The number of standard deviations to calculate the upper and lower bands.

Call with:
    vwapb_result = bta.volume_weighted_average_price_bands(df, window_size=20, num_of_std=1.0)
    df['vwap_low'] = vwapb_result['vwap_low']
    df['vwap'] = vwapb_result['vwap']
    df['vwap_high'] = vwapb_result['vwap_high']

Returns:
    pd.DataFrame: A DataFrame containing the following columns:
        - 'vwap': The Volume-Weighted Average Price (VWAP).
        - 'vwap_low': The lower band (VWAP - num_of_std × rolling std deviation).
        - 'vwap_high': The upper band (VWAP + num_of_std × rolling std deviation).

Last 32 rows of data with volume_weighted_average_price_bands values:
           date       open       high        low      close         volume      vwap_low          vwap     vwap_high
2662 2024-11-30   97460.00   97463.95   96092.01   96407.99   14503.833060  24748.444397  24846.431785  24944.419172
2663 2024-12-01   96407.99   97836.00   95693.88   97185.18   16938.604520  24759.596477  24853.120811  24946.645145
2664 2024-12-02   97185.17   98130.00   94395.00   95840.62   37958.669810  24777.310700  24867.943239  24958.575778
2665 2024-12-03   95840.61   96305.52   93578.17   95849.69   35827.322830  24792.640941  24881.755542  24970.870142
2666 2024-12-04   95849.69   99000.00   94587.83   98587.32   43850.537280  24810.864510  24899.169289  24987.474068
2667 2024-12-05   98587.32  104088.00   90500.00   96945.63  109921.729662  24852.394422  24942.655564  25032.916706
2668 2024-12-06   96945.63  101898.99   95981.72   99740.84   45049.533100  24869.237221  24960.962806  25052.688392
2669 2024-12-07   99740.84  100439.18   98844.00   99831.99   14931.945900  24875.547871  24967.069540  25058.591210
2670 2024-12-08   99831.99  101351.00   98657.70  101109.59   14612.996880  24882.570375  24973.098251  25063.626127
2671 2024-12-09  101109.60  101215.93   94150.05   97276.47   53949.115950  24904.436802  24994.513372  25084.589941
2672 2024-12-10   97276.48   98270.00   94256.54   96593.00   51708.689330  24924.683346  25014.695268  25104.707190
2673 2024-12-11   96593.00  101888.00   95658.24  101125.00   37753.782910  24939.108439  25030.080503  25121.052567
2674 2024-12-12  101125.00  102540.00   99311.64  100004.29   29232.087450  24950.241289  25042.158277  25134.075264
2675 2024-12-13  100004.29  101895.26   99205.00  101424.25   21904.039230  24959.348838  25051.232483  25143.116128
2676 2024-12-14  101424.24  102650.00  100609.41  101420.00   14191.703260  24966.294217  25057.166242  25148.038267
2677 2024-12-15  101420.00  105250.00  101237.14  104463.99   22228.921775  24976.825293  25066.712562  25156.599830
2678 2024-12-16  104463.99  107793.07  103333.00  106058.66   41302.402740  24995.068326  25084.912768  25174.757210
2679 2024-12-17  106058.65  108353.00  105321.49  106133.74   29064.936466  25007.995320  25097.854356  25187.713393
2680 2024-12-18  106133.74  106524.98  100000.00  100204.01   50307.997550  25028.839507  25119.047329  25209.255150
2681 2024-12-19  100204.01  102800.11   95700.00   97461.86   55147.398000  25050.300110  25141.185120  25232.070129
2682 2024-12-20   97461.86   98233.00   92232.54   97805.44   62884.135700  25074.018477  25165.532636  25257.046796
2683 2024-12-21   97805.44   99540.61   96398.39   97291.99   23483.541430  25084.175272  25174.832576  25265.489881
2684 2024-12-22   97292.00   97448.08   94250.35   95186.27   19353.830360  25093.342697  25182.271906  25271.201115
2685 2024-12-23   95186.28   96538.92   92520.00   94881.47   32810.767030  25108.014900  25194.704640  25281.394380
2686 2024-12-24   94881.47   99487.99   93569.02   98663.58   23674.224880  25119.953517  25204.007440  25288.061363
2687 2024-12-25   98663.58   99569.15   97632.02   99429.60   14474.165100  25126.386148  25209.823089  25293.260031
2688 2024-12-26   99429.61   99963.70   95199.14   95791.60   21192.367270  25135.247510  25218.117762  25300.988014
2689 2024-12-27   95791.60   97544.58   93500.01   94299.03   26501.264290  25146.741460  25228.217390  25309.693321
2690 2024-12-28   94299.03   95733.99   94135.66   95300.00    8385.892900  25152.772092  25231.409994  25310.047896
2691 2024-12-29   95300.00   95340.00   93009.52   93738.20   13576.005780  25160.493792  25236.501879  25312.509967
2692 2024-12-30   93738.19   95024.50   91530.45   92792.05   27619.422500  25172.767684  25246.721095  25320.674506
2693 2024-12-31   92792.05   96250.00   92033.73   93576.00   19612.033890  25182.156787  25254.065230  25325.973673

================================================================================
TESTING COMPLETE: 98/98 indicators passed
================================================================================

All indicators passed their tests!
